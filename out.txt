tests
  Proof
    ex1
      norm#1 [error]: 
Engine.run
--------------------------------
gas = 20
activeGoals:
  • Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
processing goal Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Equal (Add a#1 Z) Z) ({a + Z == Z} a#1))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z (S Z))) !~ (Equal (Add a#1 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Equal (Add a#2 (S b#3)) (S (Add a#2 b#3))) ({a + S b == S (a + b)} a#2 b#3))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z (S Z))) !~ (Equal (Add a#2 (S b#3)) (S (Add a#2 b#3)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z (S Z))) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Equal (S a#4) (S a'#5)) ({a == a' |- S a == S a'} a#4 a'#5 {a == a'}#6))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z (S Z))) !~ (Equal (S a#4) (S a'#5))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Norm a'#9) ({a == a', Norm a |- Norm a'} a#7 a'#9 {a == a'}#10))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
  • goal'     = Valid (Tuple (Norm (Add Z (S Z))) ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Equal (Add a#11 b#14) (Add a#11 b'#15)) ({a == a', b == b' |- a + b == a + b'} a#11 a'#12 b#14 b'#15 {a == a'}#13 {b == b'}#16))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z (S Z))) !~ (Equal (Add a#11 b#14) (Add a#11 b'#15))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S Z)) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z (S Z))) {Norm input})
  • rule.conc = Valid (Tuple (Norm (S a#17)) ({Norm (S a)} a#17 Norm a#19))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S Z)) !~ (S a#17)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#7 a'#9) {a == a'}#10)
  • Valid (Tuple (Norm a#7) {Norm a}#8)
applying unifying substitution to environment
  • sigma_uni = {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
--------------------------------
gas = 19
activeGoals:
  • Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • Valid (Tuple (Norm a#7) {Norm a}#8)
processing goal Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Equal (Add a#20 Z) Z) ({a + Z == Z} a#20))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S Z)) !~ Z
  • sigma_uni = {a#7 := (Add a#20 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Equal (Add a#21 (S b#22)) (S (Add a#21 b#22))) ({a + S b == S (a + b)} a#21 b#22))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S Z)) !~ (S (Add a#21 b#22))
  • sigma_uni = {a#7 := (Add a#21 (S b#22))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S Z)) !~ Z
  • sigma_uni = {a#7 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Equal (S a#23) (S a'#24)) ({a == a' |- S a == S a'} a#23 a'#24 {a == a'}#25))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S Z)) !~ (S a'#24)
  • sigma_uni = {a#7 := (S a#23)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Norm a'#28) ({a == a', Norm a |- Norm a'} a#26 a'#28 {a == a'}#29))
failed to unify goal with rule's conclusion
  • err       = (Equal a#7 (Add Z (S Z))) !~ (Norm a'#28)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Equal (Add a#30 b#33) (Add a#30 b'#34)) ({a == a', b == b' |- a + b == a + b'} a#30 a'#31 b#33 b'#34 {a == a'}#32 {b == b'}#35))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
  • goal'     = Valid (Tuple (Equal (Add Z b#33) (Add Z (S Z))) ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#7 (Add Z (S Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10)
  • rule.conc = Valid (Tuple (Norm (S a#36)) ({Norm (S a)} a#36 Norm a#38))
failed to unify goal with rule's conclusion
  • err       = (Equal a#7 (Add Z (S Z))) !~ (Norm (S a#36))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#33 b'#34) {b == b'}#35)
  • Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)
applying unifying substitution to environment
  • sigma_uni = {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
--------------------------------
gas = 18
activeGoals:
  • Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • Valid (Tuple (Equal Z a'#31) {a == a'}#32)
processing goal Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Equal (Add a#39 Z) Z) ({a + Z == Z} a#39))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#33)) !~ (Equal (Add a#39 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Equal (Add a#40 (S b#41)) (S (Add a#40 b#41))) ({a + S b == S (a + b)} a#40 b#41))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#33)) !~ (Equal (Add a#40 (S b#41)) (S (Add a#40 b#41)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#33)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Equal (S a#42) (S a'#43)) ({a == a' |- S a == S a'} a#42 a'#43 {a == a'}#44))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#33)) !~ (Equal (S a#42) (S a'#43))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Norm a'#47) ({a == a', Norm a |- Norm a'} a#45 a'#47 {a == a'}#48))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
  • goal'     = Valid (Tuple (Norm (Add Z b#33)) ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Equal (Add a#49 b#52) (Add a#49 b'#53)) ({a == a', b == b' |- a + b == a + b'} a#49 a'#50 b#52 b'#53 {a == a'}#51 {b == b'}#54))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#33)) !~ (Equal (Add a#49 b#52) (Add a#49 b'#53))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#33) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8)
  • rule.conc = Valid (Tuple (Norm (S a#55)) ({Norm (S a)} a#55 Norm a#57))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#33) !~ (S a#55)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#45 a'#47) {a == a'}#48)
  • Valid (Tuple (Norm a#45) {Norm a}#46)
applying unifying substitution to environment
  • sigma_uni = {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
--------------------------------
gas = 17
activeGoals:
  • Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • Valid (Tuple (Equal a#45 (Add Z b#33)) {a == a'}#48)
  • Valid (Tuple (Norm a#45) {Norm a}#46)
processing goal Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Equal (Add a#58 Z) Z) ({a + Z == Z} a#58))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#33 := (Add a#58 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Equal (Add a#59 (S b#60)) (S (Add a#59 b#60))) ({a + S b == S (a + b)} a#59 b#60))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#59 b#60)
  • sigma_uni = {b#33 := (Add a#59 (S b#60))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#33 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Equal (S a#61) (S a'#62)) ({a == a' |- S a == S a'} a#61 a'#62 {a == a'}#63))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
  • goal'     = Valid (Tuple (Equal (S a#61) (S Z)) ({a == a' |- S a == S a'} a#61 Z {a == a'}#63))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Norm a'#66) ({a == a', Norm a |- Norm a'} a#64 a'#66 {a == a'}#67))
failed to unify goal with rule's conclusion
  • err       = (Equal b#33 (S Z)) !~ (Norm a'#66)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Equal (Add a#68 b#71) (Add a#68 b'#72)) ({a == a', b == b' |- a + b == a + b'} a#68 a'#69 b#71 b'#72 {a == a'}#70 {b == b'}#73))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ (Add a#68 b'#72)
  • sigma_uni = {b#33 := (Add a#68 b#71)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#33 (S Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35)
  • rule.conc = Valid (Tuple (Norm (S a#74)) ({Norm (S a)} a#74 Norm a#76))
failed to unify goal with rule's conclusion
  • err       = (Equal b#33 (S Z)) !~ (Norm (S a#74))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)
applying unifying substitution to environment
  • sigma_uni = {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
--------------------------------
gas = 16
activeGoals:
  • Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • Valid (Tuple (Norm a#45) {Norm a}#46)
  • Valid (Tuple (Equal a#61 Z) {a == a'}#63)
processing goal Valid (Tuple (Equal Z a'#31) {a == a'}#32)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Equal (Add a#77 Z) Z) ({a + Z == Z} a#77))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#77 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Equal (Add a#78 (S b#79)) (S (Add a#78 b#79))) ({a + S b == S (a + b)} a#78 b#79))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#78 (S b#79))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#31 := Z, {a == a'}#32 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Equal (S a#80) (S a'#81)) ({a == a' |- S a == S a'} a#80 a'#81 {a == a'}#82))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#80)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Norm a'#85) ({a == a', Norm a |- Norm a'} a#83 a'#85 {a == a'}#86))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#31) !~ (Norm a'#85)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Equal (Add a#87 b#90) (Add a#87 b'#91)) ({a == a', b == b' |- a + b == a + b'} a#87 a'#88 b#90 b'#91 {a == a'}#89 {b == b'}#92))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#87 b#90)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#31) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#31) {a == a'}#32)
  • rule.conc = Valid (Tuple (Norm (S a#93)) ({Norm (S a)} a#93 Norm a#95))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#31) !~ (Norm (S a#93))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#31 := Z, {a == a'}#32 := {Z == Z}}
--------------------------------
gas = 15
activeGoals:
  • Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • Valid (Tuple (Norm a#45) {Norm a}#46)
  • Valid (Tuple (Equal a#61 Z) {a == a'}#63)
processing goal Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Equal (Add a#96 Z) Z) ({a + Z == Z} a#96))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#61)) !~ Z
  • sigma_uni = {a#45 := (Add a#96 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Equal (Add a#97 (S b#98)) (S (Add a#97 b#98))) ({a + S b == S (a + b)} a#97 b#98))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#61)) !~ (S (Add a#97 b#98))
  • sigma_uni = {a#45 := (Add a#97 (S b#98))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#61)) !~ Z
  • sigma_uni = {a#45 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Equal (S a#99) (S a'#100)) ({a == a' |- S a == S a'} a#99 a'#100 {a == a'}#101))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#61)) !~ (S a'#100)
  • sigma_uni = {a#45 := (S a#99)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Norm a'#104) ({a == a', Norm a |- Norm a'} a#102 a'#104 {a == a'}#105))
failed to unify goal with rule's conclusion
  • err       = (Equal a#45 (Add Z (S a#61))) !~ (Norm a'#104)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Equal (Add a#106 b#109) (Add a#106 b'#110)) ({a == a', b == b' |- a + b == a + b'} a#106 a'#107 b#109 b'#110 {a == a'}#108 {b == b'}#111))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
  • goal'     = Valid (Tuple (Equal (Add Z b#109) (Add Z (S a#61))) ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#45 (Add Z (S a#61))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48)
  • rule.conc = Valid (Tuple (Norm (S a#112)) ({Norm (S a)} a#112 Norm a#114))
failed to unify goal with rule's conclusion
  • err       = (Equal a#45 (Add Z (S a#61))) !~ (Norm (S a#112))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#109 b'#110) {b == b'}#111)
  • Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)
applying unifying substitution to environment
  • sigma_uni = {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
--------------------------------
gas = 14
activeGoals:
  • Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • Valid (Tuple (Equal b#109 (S a#61)) {b == b'}#111)
  • Valid (Tuple (Equal Z a'#107) {a == a'}#108)
processing goal Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Equal (Add a#115 Z) Z) ({a + Z == Z} a#115))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#109)) !~ (Equal (Add a#115 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Equal (Add a#116 (S b#117)) (S (Add a#116 b#117))) ({a + S b == S (a + b)} a#116 b#117))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#109)) !~ (Equal (Add a#116 (S b#117)) (S (Add a#116 b#117)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#109)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Equal (S a#118) (S a'#119)) ({a == a' |- S a == S a'} a#118 a'#119 {a == a'}#120))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#109)) !~ (Equal (S a#118) (S a'#119))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Norm a'#123) ({a == a', Norm a |- Norm a'} a#121 a'#123 {a == a'}#124))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
  • goal'     = Valid (Tuple (Norm (Add Z b#109)) ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Equal (Add a#125 b#128) (Add a#125 b'#129)) ({a == a', b == b' |- a + b == a + b'} a#125 a'#126 b#128 b'#129 {a == a'}#127 {b == b'}#130))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#109)) !~ (Equal (Add a#125 b#128) (Add a#125 b'#129))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#109) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46)
  • rule.conc = Valid (Tuple (Norm (S a#131)) ({Norm (S a)} a#131 Norm a#133))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#109) !~ (S a#131)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#121 a'#123) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
applying unifying substitution to environment
  • sigma_uni = {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
--------------------------------
gas = 13
activeGoals:
  • Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • Valid (Tuple (Equal b#109 (S a#61)) {b == b'}#111)
  • Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • Valid (Tuple (Equal a#121 (Add Z b#109)) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
processing goal Valid (Tuple (Equal a#61 Z) {a == a'}#63)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Equal (Add a#134 Z) Z) ({a + Z == Z} a#134))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#61 := (Add a#134 Z), {a == a'}#63 := ({a + Z == Z} a#134)}
  • goal'     = Valid (Tuple (Equal (Add a#134 Z) Z) ({a + Z == Z} a#134))
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Equal (Add a#135 (S b#136)) (S (Add a#135 b#136))) ({a + S b == S (a + b)} a#135 b#136))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S (Add a#135 b#136))
  • sigma_uni = {a#61 := (Add a#135 (S b#136))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a#61 := Z, {a == a'}#63 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Equal (S a#137) (S a'#138)) ({a == a' |- S a == S a'} a#137 a'#138 {a == a'}#139))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a'#138)
  • sigma_uni = {a#61 := (S a#137)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Norm a'#142) ({a == a', Norm a |- Norm a'} a#140 a'#142 {a == a'}#143))
failed to unify goal with rule's conclusion
  • err       = (Equal a#61 Z) !~ (Norm a'#142)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Equal (Add a#144 b#147) (Add a#144 b'#148)) ({a == a', b == b' |- a + b == a + b'} a#144 a'#145 b#147 b'#148 {a == a'}#146 {b == b'}#149))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#144 b'#148)
  • sigma_uni = {a#61 := (Add a#144 b#147)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#61 Z) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#61 Z) {a == a'}#63)
  • rule.conc = Valid (Tuple (Norm (S a#150)) ({Norm (S a)} a#150 Norm a#152))
failed to unify goal with rule's conclusion
  • err       = (Equal a#61 Z) !~ (Norm (S a#150))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#61 := (Add a#134 Z), {a == a'}#63 := ({a + Z == Z} a#134)}
--------------------------------
gas = 12
activeGoals:
  • Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • Valid (Tuple (Equal a#121 (Add Z b#109)) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
processing goal Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (Add a#153 Z) Z) ({a + Z == Z} a#153))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#134 Z)) !~ Z
  • sigma_uni = {b#109 := (Add a#153 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (Add a#154 (S b#155)) (S (Add a#154 b#155))) ({a + S b == S (a + b)} a#154 b#155))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#134 := a#154, b#109 := (Add a#154 (S Z)), b#155 := Z, {b == b'}#111 := ({a + S b == S (a + b)} a#154 Z)}
  • goal'     = Valid (Tuple (Equal (Add a#154 (S Z)) (S (Add a#154 Z))) ({a + S b == S (a + b)} a#154 Z))
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S (Add a#134 Z)) !~ Z
  • sigma_uni = {b#109 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (S a#156) (S a'#157)) ({a == a' |- S a == S a'} a#156 a'#157 {a == a'}#158))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#157 := (Add a#134 Z), b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 (Add a#134 Z) {a == a'}#158)}
  • goal'     = Valid (Tuple (Equal (S a#156) (S (Add a#134 Z))) ({a == a' |- S a == S a'} a#156 (Add a#134 Z) {a == a'}#158))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Norm a'#161) ({a == a', Norm a |- Norm a'} a#159 a'#161 {a == a'}#162))
failed to unify goal with rule's conclusion
  • err       = (Equal b#109 (S (Add a#134 Z))) !~ (Norm a'#161)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (Add a#163 b#166) (Add a#163 b'#167)) ({a == a', b == b' |- a + b == a + b'} a#163 a'#164 b#166 b'#167 {a == a'}#165 {b == b'}#168))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#134 Z)) !~ (Add a#163 b'#167)
  • sigma_uni = {b#109 := (Add a#163 b#166)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#109 (S (Add a#134 Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111)
  • rule.conc = Valid (Tuple (Norm (S a#169)) ({Norm (S a)} a#169 Norm a#171))
failed to unify goal with rule's conclusion
  • err       = (Equal b#109 (S (Add a#134 Z))) !~ (Norm (S a#169))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#134 := a#154, b#109 := (Add a#154 (S Z)), b#155 := Z, {b == b'}#111 := ({a + S b == S (a + b)} a#154 Z)}
--------------------------------
gas = 11
activeGoals:
  • Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
processing goal Valid (Tuple (Equal Z a'#107) {a == a'}#108)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#172 Z) Z) ({a + Z == Z} a#172))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#172 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#173 (S b#174)) (S (Add a#173 b#174))) ({a + S b == S (a + b)} a#173 b#174))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#173 (S b#174))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#107 := Z, {a == a'}#108 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (S a#175) (S a'#176)) ({a == a' |- S a == S a'} a#175 a'#176 {a == a'}#177))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#175)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm a'#180) ({a == a', Norm a |- Norm a'} a#178 a'#180 {a == a'}#181))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm a'#180)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#182 b#185) (Add a#182 b'#186)) ({a == a', b == b' |- a + b == a + b'} a#182 a'#183 b#185 b'#186 {a == a'}#184 {b == b'}#187))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#182 b#185)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm (S a#188)) ({Norm (S a)} a#188 Norm a#190))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm (S a#188))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#107 := Z, {a == a'}#108 := {Z == Z}}
--------------------------------
gas = 10
activeGoals:
  • Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
processing goal Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#191 Z) Z) ({a + Z == Z} a#191))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#154 (S Z))) !~ Z
  • sigma_uni = {a#121 := (Add a#191 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#192 (S b#193)) (S (Add a#192 b#193))) ({a + S b == S (a + b)} a#192 b#193))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#154 (S Z))) !~ (S (Add a#192 b#193))
  • sigma_uni = {a#121 := (Add a#192 (S b#193))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#154 (S Z))) !~ Z
  • sigma_uni = {a#121 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (S a#194) (S a'#195)) ({a == a' |- S a == S a'} a#194 a'#195 {a == a'}#196))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#154 (S Z))) !~ (S a'#195)
  • sigma_uni = {a#121 := (S a#194)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm a'#199) ({a == a', Norm a |- Norm a'} a#197 a'#199 {a == a'}#200))
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (Add a#154 (S Z)))) !~ (Norm a'#199)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#201 b#204) (Add a#201 b'#205)) ({a == a', b == b' |- a + b == a + b'} a#201 a'#202 b#204 b'#205 {a == a'}#203 {b == b'}#206))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (Add a#154 (S Z)), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (Add a#154 (S Z)) {a == a'}#203 {b == b'}#206)}
  • goal'     = Valid (Tuple (Equal (Add Z b#204) (Add Z (Add a#154 (S Z)))) ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (Add a#154 (S Z)) {a == a'}#203 {b == b'}#206))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (Add a#154 (S Z)))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm (S a#207)) ({Norm (S a)} a#207 Norm a#209))
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (Add a#154 (S Z)))) !~ (Norm (S a#207))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#204 b'#205) {b == b'}#206)
  • Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)
applying unifying substitution to environment
  • sigma_uni = {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (Add a#154 (S Z)), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (Add a#154 (S Z)) {a == a'}#203 {b == b'}#206)}
--------------------------------
gas = 9
activeGoals:
  • Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
processing goal Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#210 Z) Z) ({a + Z == Z} a#210))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#210 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#211 (S b#212)) (S (Add a#211 b#212))) ({a + S b == S (a + b)} a#211 b#212))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#211 (S b#212)) (S (Add a#211 b#212)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (S a#213) (S a'#214)) ({a == a' |- S a == S a'} a#213 a'#214 {a == a'}#215))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (S a#213) (S a'#214))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm a'#218) ({a == a', Norm a |- Norm a'} a#216 a'#218 {a == a'}#219))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
  • goal'     = Valid (Tuple (Norm (Add Z b#204)) ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#220 b#223) (Add a#220 b'#224)) ({a == a', b == b' |- a + b == a + b'} a#220 a'#221 b#223 b'#224 {a == a'}#222 {b == b'}#225))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#220 b#223) (Add a#220 b'#224))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#204) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm (S a#226)) ({Norm (S a)} a#226 Norm a#228))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#204) !~ (S a#226)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#216 a'#218) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
applying unifying substitution to environment
  • sigma_uni = {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
--------------------------------
gas = 8
activeGoals:
  • Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z b#204)) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
processing goal Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#229 Z) Z) ({a + Z == Z} a#229))
failed to unify goal with rule's conclusion
  • err       = (Add a#154 (S Z)) !~ Z
  • sigma_uni = {b#204 := (Add a#229 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#230 (S b#231)) (S (Add a#230 b#231))) ({a + S b == S (a + b)} a#230 b#231))
failed to unify goal with rule's conclusion
  • err       = (Add a#154 (S Z)) !~ (S (Add a#230 b#231))
  • sigma_uni = {b#204 := (Add a#230 (S b#231))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#154 (S Z)) !~ Z
  • sigma_uni = {b#204 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (S a#232) (S a'#233)) ({a == a' |- S a == S a'} a#232 a'#233 {a == a'}#234))
failed to unify goal with rule's conclusion
  • err       = (Add a#154 (S Z)) !~ (S a'#233)
  • sigma_uni = {b#204 := (S a#232)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm a'#237) ({a == a', Norm a |- Norm a'} a#235 a'#237 {a == a'}#238))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (Add a#154 (S Z))) !~ (Norm a'#237)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#239 b#242) (Add a#239 b'#243)) ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 b'#243 {a == a'}#241 {b == b'}#244))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#154 := a#239, b#204 := (Add a#239 b#242), b'#243 := (S Z), {b == b'}#206 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 (S Z) {a == a'}#241 {b == b'}#244)}
  • goal'     = Valid (Tuple (Equal (Add a#239 b#242) (Add a#239 (S Z))) ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 (S Z) {a == a'}#241 {b == b'}#244))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (Add a#154 (S Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm (S a#245)) ({Norm (S a)} a#245 Norm a#247))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (Add a#154 (S Z))) !~ (Norm (S a#245))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#242 b'#243) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
applying unifying substitution to environment
  • sigma_uni = {a#154 := a#239, b#204 := (Add a#239 b#242), b'#243 := (S Z), {b == b'}#206 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 (S Z) {a == a'}#241 {b == b'}#244)}
--------------------------------
gas = 7
activeGoals:
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
processing goal Valid (Tuple (Equal Z a'#202) {a == a'}#203)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#248 Z) Z) ({a + Z == Z} a#248))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#248 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#249 (S b#250)) (S (Add a#249 b#250))) ({a + S b == S (a + b)} a#249 b#250))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#249 (S b#250))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (S a#251) (S a'#252)) ({a == a' |- S a == S a'} a#251 a'#252 {a == a'}#253))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#251)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm a'#256) ({a == a', Norm a |- Norm a'} a#254 a'#256 {a == a'}#257))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm a'#256)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#258 b#261) (Add a#258 b'#262)) ({a == a', b == b' |- a + b == a + b'} a#258 a'#259 b#261 b'#262 {a == a'}#260 {b == b'}#263))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#258 b#261)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm (S a#264)) ({Norm (S a)} a#264 Norm a#266))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm (S a#264))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
--------------------------------
gas = 6
activeGoals:
  • Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
processing goal Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#267 Z) Z) ({a + Z == Z} a#267))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#239 b#242)) !~ Z
  • sigma_uni = {a#216 := (Add a#267 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#268 (S b#269)) (S (Add a#268 b#269))) ({a + S b == S (a + b)} a#268 b#269))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#239 b#242)) !~ (S (Add a#268 b#269))
  • sigma_uni = {a#216 := (Add a#268 (S b#269))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#239 b#242)) !~ Z
  • sigma_uni = {a#216 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (S a#270) (S a'#271)) ({a == a' |- S a == S a'} a#270 a'#271 {a == a'}#272))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#239 b#242)) !~ (S a'#271)
  • sigma_uni = {a#216 := (S a#270)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm a'#275) ({a == a', Norm a |- Norm a'} a#273 a'#275 {a == a'}#276))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#239 b#242))) !~ (Norm a'#275)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#277 b#280) (Add a#277 b'#281)) ({a == a', b == b' |- a + b == a + b'} a#277 a'#278 b#280 b'#281 {a == a'}#279 {b == b'}#282))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#216 := (Add Z b#280), a#277 := Z, b'#281 := (Add a#239 b#242), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#278 b#280 (Add a#239 b#242) {a == a'}#279 {b == b'}#282)}
  • goal'     = Valid (Tuple (Equal (Add Z b#280) (Add Z (Add a#239 b#242))) ({a == a', b == b' |- a + b == a + b'} Z a'#278 b#280 (Add a#239 b#242) {a == a'}#279 {b == b'}#282))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#239 b#242))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm (S a#283)) ({Norm (S a)} a#283 Norm a#285))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#239 b#242))) !~ (Norm (S a#283))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#280 b'#281) {b == b'}#282)
  • Valid (Tuple (Equal a#277 a'#278) {a == a'}#279)
applying unifying substitution to environment
  • sigma_uni = {a#216 := (Add Z b#280), a#277 := Z, b'#281 := (Add a#239 b#242), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#278 b#280 (Add a#239 b#242) {a == a'}#279 {b == b'}#282)}
--------------------------------
gas = 5
activeGoals:
  • Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal b#280 (Add a#239 b#242)) {b == b'}#282)
  • Valid (Tuple (Equal Z a'#278) {a == a'}#279)
processing goal Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#286 Z) Z) ({a + Z == Z} a#286))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#280)) !~ (Equal (Add a#286 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#287 (S b#288)) (S (Add a#287 b#288))) ({a + S b == S (a + b)} a#287 b#288))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#280)) !~ (Equal (Add a#287 (S b#288)) (S (Add a#287 b#288)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#280)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (S a#289) (S a'#290)) ({a == a' |- S a == S a'} a#289 a'#290 {a == a'}#291))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#280)) !~ (Equal (S a#289) (S a'#290))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm a'#294) ({a == a', Norm a |- Norm a'} a#292 a'#294 {a == a'}#295))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#294 := (Add Z b#280), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#292 (Add Z b#280) {a == a'}#295)}
  • goal'     = Valid (Tuple (Norm (Add Z b#280)) ({a == a', Norm a |- Norm a'} a#292 (Add Z b#280) {a == a'}#295))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#296 b#299) (Add a#296 b'#300)) ({a == a', b == b' |- a + b == a + b'} a#296 a'#297 b#299 b'#300 {a == a'}#298 {b == b'}#301))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#280)) !~ (Equal (Add a#296 b#299) (Add a#296 b'#300))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#280) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm (S a#302)) ({Norm (S a)} a#302 Norm a#304))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#280) !~ (S a#302)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#292 a'#294) {a == a'}#295)
  • Valid (Tuple (Norm a#292) {Norm a}#293)
applying unifying substitution to environment
  • sigma_uni = {a'#294 := (Add Z b#280), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#292 (Add Z b#280) {a == a'}#295)}
--------------------------------
gas = 4
activeGoals:
  • Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal b#280 (Add a#239 b#242)) {b == b'}#282)
  • Valid (Tuple (Equal Z a'#278) {a == a'}#279)
  • Valid (Tuple (Equal a#292 (Add Z b#280)) {a == a'}#295)
  • Valid (Tuple (Norm a#292) {Norm a}#293)
processing goal Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#305 Z) Z) ({a + Z == Z} a#305))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#242 := (Add a#305 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307))) ({a + S b == S (a + b)} a#306 b#307))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#306 b#307)
  • sigma_uni = {b#242 := (Add a#306 (S b#307))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#242 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (S a#308) (S a'#309)) ({a == a' |- S a == S a'} a#308 a'#309 {a == a'}#310))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#309 := Z, b#242 := (S a#308), {b == b'}#244 := ({a == a' |- S a == S a'} a#308 Z {a == a'}#310)}
  • goal'     = Valid (Tuple (Equal (S a#308) (S Z)) ({a == a' |- S a == S a'} a#308 Z {a == a'}#310))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm a'#313) ({a == a', Norm a |- Norm a'} a#311 a'#313 {a == a'}#314))
failed to unify goal with rule's conclusion
  • err       = (Equal b#242 (S Z)) !~ (Norm a'#313)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#315 b#318) (Add a#315 b'#319)) ({a == a', b == b' |- a + b == a + b'} a#315 a'#316 b#318 b'#319 {a == a'}#317 {b == b'}#320))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ (Add a#315 b'#319)
  • sigma_uni = {b#242 := (Add a#315 b#318)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#242 (S Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm (S a#321)) ({Norm (S a)} a#321 Norm a#323))
failed to unify goal with rule's conclusion
  • err       = (Equal b#242 (S Z)) !~ (Norm (S a#321))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#308 a'#309) {a == a'}#310)
applying unifying substitution to environment
  • sigma_uni = {a'#309 := Z, b#242 := (S a#308), {b == b'}#244 := ({a == a' |- S a == S a'} a#308 Z {a == a'}#310)}
--------------------------------
gas = 3
activeGoals:
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • Valid (Tuple (Equal Z a'#278) {a == a'}#279)
  • Valid (Tuple (Equal a#292 (Add Z b#280)) {a == a'}#295)
  • Valid (Tuple (Norm a#292) {Norm a}#293)
  • Valid (Tuple (Equal a#308 Z) {a == a'}#310)
processing goal Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
delaying goal
  • goal = Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • Valid (Tuple (Equal Z a'#278) {a == a'}#279)
  • Valid (Tuple (Equal a#292 (Add Z b#280)) {a == a'}#295)
  • Valid (Tuple (Norm a#292) {Norm a}#293)
  • Valid (Tuple (Equal a#308 Z) {a == a'}#310)
processing goal Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (S a#308)) !~ Z
  • sigma_uni = {b#280 := (Add a#324 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Equal (Add a#325 (S b#326)) (S (Add a#325 b#326))) ({a + S b == S (a + b)} a#325 b#326))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (S a#308)) !~ (S (Add a#325 b#326))
  • sigma_uni = {b#280 := (Add a#325 (S b#326))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (S a#308)) !~ Z
  • sigma_uni = {b#280 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Equal (S a#327) (S a'#328)) ({a == a' |- S a == S a'} a#327 a'#328 {a == a'}#329))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (S a#308)) !~ (S a'#328)
  • sigma_uni = {b#280 := (S a#327)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Norm a'#332) ({a == a', Norm a |- Norm a'} a#330 a'#332 {a == a'}#333))
failed to unify goal with rule's conclusion
  • err       = (Equal b#280 (Add a#239 (S a#308))) !~ (Norm a'#332)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 b'#338)) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 b'#338 {a == a'}#336 {b == b'}#339))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#239 := a#334, b#280 := (Add a#334 b#337), b'#338 := (S a#308), {b == b'}#282 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S a#308) {a == a'}#336 {b == b'}#339)}
  • goal'     = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 (S a#308))) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S a#308) {a == a'}#336 {b == b'}#339))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#280 (Add a#239 (S a#308))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282)
  • rule.conc = Valid (Tuple (Norm (S a#340)) ({Norm (S a)} a#340 Norm a#342))
failed to unify goal with rule's conclusion
  • err       = (Equal b#280 (Add a#239 (S a#308))) !~ (Norm (S a#340))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#337 b'#338) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
applying unifying substitution to environment
  • sigma_uni = {a#239 := a#334, b#280 := (Add a#334 b#337), b'#338 := (S a#308), {b == b'}#282 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S a#308) {a == a'}#336 {b == b'}#339)}
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal a#334 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal Z a'#278) {a == a'}#279)
  • Valid (Tuple (Equal a#292 (Add Z (Add a#334 b#337))) {a == a'}#295)
  • Valid (Tuple (Norm a#292) {Norm a}#293)
  • Valid (Tuple (Equal a#308 Z) {a == a'}#310)
  • Valid (Tuple (Equal b#337 (S a#308)) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
processing goal Valid (Tuple (Equal a#334 a'#240) {a == a'}#241)
delaying goal
  • goal = Valid (Tuple (Equal a#334 a'#240) {a == a'}#241)
--------------------------------
gas = 0
new subgoals
  • Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)
applying unifying substitution to environment
  • sigma_uni = {a'#157 := (Add a#134 Z), b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 (Add a#134 Z) {a == a'}#158)}
--------------------------------
gas = 11
activeGoals:
  • Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
  • Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
processing goal Valid (Tuple (Equal Z a'#107) {a == a'}#108)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#172 Z) Z) ({a + Z == Z} a#172))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#172 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#173 (S b#174)) (S (Add a#173 b#174))) ({a + S b == S (a + b)} a#173 b#174))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#173 (S b#174))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#107 := Z, {a == a'}#108 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (S a#175) (S a'#176)) ({a == a' |- S a == S a'} a#175 a'#176 {a == a'}#177))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#175)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm a'#180) ({a == a', Norm a |- Norm a'} a#178 a'#180 {a == a'}#181))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm a'#180)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#182 b#185) (Add a#182 b'#186)) ({a == a', b == b' |- a + b == a + b'} a#182 a'#183 b#185 b'#186 {a == a'}#184 {b == b'}#187))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#182 b#185)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm (S a#188)) ({Norm (S a)} a#188 Norm a#190))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm (S a#188))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#107 := Z, {a == a'}#108 := {Z == Z}}
--------------------------------
gas = 10
activeGoals:
  • Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
  • Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
processing goal Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#191 Z) Z) ({a + Z == Z} a#191))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ Z
  • sigma_uni = {a#121 := (Add a#191 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#192 (S b#193)) (S (Add a#192 b#193))) ({a + S b == S (a + b)} a#192 b#193))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ (S (Add a#192 b#193))
  • sigma_uni = {a#121 := (Add a#192 (S b#193))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ Z
  • sigma_uni = {a#121 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (S a#194) (S a'#195)) ({a == a' |- S a == S a'} a#194 a'#195 {a == a'}#196))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ (S a'#195)
  • sigma_uni = {a#121 := (S a#194)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm a'#199) ({a == a', Norm a |- Norm a'} a#197 a'#199 {a == a'}#200))
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (S a#156))) !~ (Norm a'#199)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#201 b#204) (Add a#201 b'#205)) ({a == a', b == b' |- a + b == a + b'} a#201 a'#202 b#204 b'#205 {a == a'}#203 {b == b'}#206))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
  • goal'     = Valid (Tuple (Equal (Add Z b#204) (Add Z (S a#156))) ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (S a#156))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm (S a#207)) ({Norm (S a)} a#207 Norm a#209))
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (S a#156))) !~ (Norm (S a#207))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#204 b'#205) {b == b'}#206)
  • Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)
applying unifying substitution to environment
  • sigma_uni = {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
--------------------------------
gas = 9
activeGoals:
  • Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • Valid (Tuple (Equal b#204 (S a#156)) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
processing goal Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#210 Z) Z) ({a + Z == Z} a#210))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#210 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#211 (S b#212)) (S (Add a#211 b#212))) ({a + S b == S (a + b)} a#211 b#212))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#211 (S b#212)) (S (Add a#211 b#212)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (S a#213) (S a'#214)) ({a == a' |- S a == S a'} a#213 a'#214 {a == a'}#215))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (S a#213) (S a'#214))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm a'#218) ({a == a', Norm a |- Norm a'} a#216 a'#218 {a == a'}#219))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
  • goal'     = Valid (Tuple (Norm (Add Z b#204)) ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#220 b#223) (Add a#220 b'#224)) ({a == a', b == b' |- a + b == a + b'} a#220 a'#221 b#223 b'#224 {a == a'}#222 {b == b'}#225))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#220 b#223) (Add a#220 b'#224))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#204) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm (S a#226)) ({Norm (S a)} a#226 Norm a#228))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#204) !~ (S a#226)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#216 a'#218) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
applying unifying substitution to environment
  • sigma_uni = {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
--------------------------------
gas = 8
activeGoals:
  • Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • Valid (Tuple (Equal b#204 (S a#156)) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z b#204)) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
processing goal Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (Add a#229 Z) Z) ({a + Z == Z} a#229))
failed to unify goal with rule's conclusion
  • err       = (Add a#134 Z) !~ Z
  • sigma_uni = {a#156 := (Add a#229 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (Add a#230 (S b#231)) (S (Add a#230 b#231))) ({a + S b == S (a + b)} a#230 b#231))
failed to unify goal with rule's conclusion
  • err       = (Add a#134 Z) !~ (S (Add a#230 b#231))
  • sigma_uni = {a#156 := (Add a#230 (S b#231))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#134 Z) !~ Z
  • sigma_uni = {a#156 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (S a#232) (S a'#233)) ({a == a' |- S a == S a'} a#232 a'#233 {a == a'}#234))
failed to unify goal with rule's conclusion
  • err       = (Add a#134 Z) !~ (S a'#233)
  • sigma_uni = {a#156 := (S a#232)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Norm a'#237) ({a == a', Norm a |- Norm a'} a#235 a'#237 {a == a'}#238))
failed to unify goal with rule's conclusion
  • err       = (Equal a#156 (Add a#134 Z)) !~ (Norm a'#237)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (Add a#239 b#242) (Add a#239 b'#243)) ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 b'#243 {a == a'}#241 {b == b'}#244))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#134 := a#239, a#156 := (Add a#239 b#242), b'#243 := Z, {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 Z {a == a'}#241 {b == b'}#244)}
  • goal'     = Valid (Tuple (Equal (Add a#239 b#242) (Add a#239 Z)) ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 Z {a == a'}#241 {b == b'}#244))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#156 (Add a#134 Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158)
  • rule.conc = Valid (Tuple (Norm (S a#245)) ({Norm (S a)} a#245 Norm a#247))
failed to unify goal with rule's conclusion
  • err       = (Equal a#156 (Add a#134 Z)) !~ (Norm (S a#245))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#242 b'#243) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
applying unifying substitution to environment
  • sigma_uni = {a#134 := a#239, a#156 := (Add a#239 b#242), b'#243 := Z, {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 Z {a == a'}#241 {b == b'}#244)}
--------------------------------
gas = 7
activeGoals:
  • Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z b#204)) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
processing goal Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#248 Z) Z) ({a + Z == Z} a#248))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#239 b#242)) !~ Z
  • sigma_uni = {b#204 := (Add a#248 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#249 (S b#250)) (S (Add a#249 b#250))) ({a + S b == S (a + b)} a#249 b#250))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#239 := a#249, b#204 := (Add a#249 (S b#250)), b#242 := b#250, {b == b'}#206 := ({a + S b == S (a + b)} a#249 b#250)}
  • goal'     = Valid (Tuple (Equal (Add a#249 (S b#250)) (S (Add a#249 b#250))) ({a + S b == S (a + b)} a#249 b#250))
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S (Add a#239 b#242)) !~ Z
  • sigma_uni = {b#204 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (S a#251) (S a'#252)) ({a == a' |- S a == S a'} a#251 a'#252 {a == a'}#253))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#252 := (Add a#239 b#242), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#239 b#242) {a == a'}#253)}
  • goal'     = Valid (Tuple (Equal (S a#251) (S (Add a#239 b#242))) ({a == a' |- S a == S a'} a#251 (Add a#239 b#242) {a == a'}#253))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm a'#256) ({a == a', Norm a |- Norm a'} a#254 a'#256 {a == a'}#257))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S (Add a#239 b#242))) !~ (Norm a'#256)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#258 b#261) (Add a#258 b'#262)) ({a == a', b == b' |- a + b == a + b'} a#258 a'#259 b#261 b'#262 {a == a'}#260 {b == b'}#263))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#239 b#242)) !~ (Add a#258 b'#262)
  • sigma_uni = {b#204 := (Add a#258 b#261)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S (Add a#239 b#242))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm (S a#264)) ({Norm (S a)} a#264 Norm a#266))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S (Add a#239 b#242))) !~ (Norm (S a#264))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#239 := a#249, b#204 := (Add a#249 (S b#250)), b#242 := b#250, {b == b'}#206 := ({a + S b == S (a + b)} a#249 b#250)}
--------------------------------
gas = 6
activeGoals:
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
processing goal Valid (Tuple (Equal Z a'#202) {a == a'}#203)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#267 Z) Z) ({a + Z == Z} a#267))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#267 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#268 (S b#269)) (S (Add a#268 b#269))) ({a + S b == S (a + b)} a#268 b#269))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#268 (S b#269))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (S a#270) (S a'#271)) ({a == a' |- S a == S a'} a#270 a'#271 {a == a'}#272))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#270)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm a'#275) ({a == a', Norm a |- Norm a'} a#273 a'#275 {a == a'}#276))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm a'#275)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#277 b#280) (Add a#277 b'#281)) ({a == a', b == b' |- a + b == a + b'} a#277 a'#278 b#280 b'#281 {a == a'}#279 {b == b'}#282))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#277 b#280)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm (S a#283)) ({Norm (S a)} a#283 Norm a#285))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm (S a#283))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
--------------------------------
gas = 5
activeGoals:
  • Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
processing goal Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#286 Z) Z) ({a + Z == Z} a#286))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S b#250))) !~ Z
  • sigma_uni = {a#216 := (Add a#286 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#287 (S b#288)) (S (Add a#287 b#288))) ({a + S b == S (a + b)} a#287 b#288))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S b#250))) !~ (S (Add a#287 b#288))
  • sigma_uni = {a#216 := (Add a#287 (S b#288))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S b#250))) !~ Z
  • sigma_uni = {a#216 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (S a#289) (S a'#290)) ({a == a' |- S a == S a'} a#289 a'#290 {a == a'}#291))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S b#250))) !~ (S a'#290)
  • sigma_uni = {a#216 := (S a#289)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm a'#294) ({a == a', Norm a |- Norm a'} a#292 a'#294 {a == a'}#295))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#249 (S b#250)))) !~ (Norm a'#294)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#296 b#299) (Add a#296 b'#300)) ({a == a', b == b' |- a + b == a + b'} a#296 a'#297 b#299 b'#300 {a == a'}#298 {b == b'}#301))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (Add a#249 (S b#250)), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S b#250)) {a == a'}#298 {b == b'}#301)}
  • goal'     = Valid (Tuple (Equal (Add Z b#299) (Add Z (Add a#249 (S b#250)))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S b#250)) {a == a'}#298 {b == b'}#301))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#249 (S b#250)))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm (S a#302)) ({Norm (S a)} a#302 Norm a#304))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#249 (S b#250)))) !~ (Norm (S a#302))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#299 b'#300) {b == b'}#301)
  • Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)
applying unifying substitution to environment
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (Add a#249 (S b#250)), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S b#250)) {a == a'}#298 {b == b'}#301)}
--------------------------------
gas = 4
activeGoals:
  • Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal b#299 (Add a#249 (S b#250))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
processing goal Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#305 Z) Z) ({a + Z == Z} a#305))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#305 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307))) ({a + S b == S (a + b)} a#306 b#307))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (S a#308) (S a'#309)) ({a == a' |- S a == S a'} a#308 a'#309 {a == a'}#310))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (S a#308) (S a'#309))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm a'#313) ({a == a', Norm a |- Norm a'} a#311 a'#313 {a == a'}#314))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
  • goal'     = Valid (Tuple (Norm (Add Z b#299)) ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#315 b#318) (Add a#315 b'#319)) ({a == a', b == b' |- a + b == a + b'} a#315 a'#316 b#318 b'#319 {a == a'}#317 {b == b'}#320))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#315 b#318) (Add a#315 b'#319))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm (S a#321)) ({Norm (S a)} a#321 Norm a#323))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ (S a#321)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#311 a'#313) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
applying unifying substitution to environment
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
--------------------------------
gas = 3
activeGoals:
  • Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal b#299 (Add a#249 (S b#250))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal b#250 Z) {b == b'}#244)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
successfully unified goal with rule's conclusion
  • sigma_uni = {b#250 := (Add a#324 Z), {b == b'}#244 := ({a + Z == Z} a#324)}
  • goal'     = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#325 (S b#326)) (S (Add a#325 b#326))) ({a + S b == S (a + b)} a#325 b#326))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S (Add a#325 b#326))
  • sigma_uni = {b#250 := (Add a#325 (S b#326))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {b#250 := Z, {b == b'}#244 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (S a#327) (S a'#328)) ({a == a' |- S a == S a'} a#327 a'#328 {a == a'}#329))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a'#328)
  • sigma_uni = {b#250 := (S a#327)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm a'#332) ({a == a', Norm a |- Norm a'} a#330 a'#332 {a == a'}#333))
failed to unify goal with rule's conclusion
  • err       = (Equal b#250 Z) !~ (Norm a'#332)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 b'#338)) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 b'#338 {a == a'}#336 {b == b'}#339))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#334 b'#338)
  • sigma_uni = {b#250 := (Add a#334 b#337)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#250 Z) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#250 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm (S a#340)) ({Norm (S a)} a#340 Norm a#342))
failed to unify goal with rule's conclusion
  • err       = (Equal b#250 Z) !~ (Norm (S a#340))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {b#250 := (Add a#324 Z), {b == b'}#244 := ({a + Z == Z} a#324)}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
delaying goal
  • goal = Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S (Add a#324 Z))) !~ Z
  • sigma_uni = {b#299 := (Add a#343 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S (Add a#324 Z))) !~ (S (Add a#344 b#345))
  • sigma_uni = {b#299 := (Add a#344 (S b#345))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S (Add a#324 Z))) !~ Z
  • sigma_uni = {b#299 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S (Add a#324 Z))) !~ (S a'#347)
  • sigma_uni = {b#299 := (S a#346)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S (Add a#324 Z)))) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#249 := a#353, b#299 := (Add a#353 b#356), b'#357 := (S (Add a#324 Z)), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S (Add a#324 Z)) {a == a'}#355 {b == b'}#358)}
  • goal'     = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 (S (Add a#324 Z)))) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S (Add a#324 Z)) {a == a'}#355 {b == b'}#358))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S (Add a#324 Z)))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S (Add a#324 Z)))) !~ (Norm (S a#359))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#356 b'#357) {b == b'}#358)
  • Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)
applying unifying substitution to environment
  • sigma_uni = {a#249 := a#353, b#299 := (Add a#353 b#356), b'#357 := (S (Add a#324 Z)), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S (Add a#324 Z)) {a == a'}#355 {b == b'}#358)}
--------------------------------
gas = 0
applying unifying substitution to environment
  • sigma_uni = {b#250 := Z, {b == b'}#244 := {Z == Z}}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
delaying goal
  • goal = Valid (Tuple (Equal a#249 a'#240) {a == a'}#241)
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ Z
  • sigma_uni = {b#299 := (Add a#343 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ (S (Add a#344 b#345))
  • sigma_uni = {b#299 := (Add a#344 (S b#345))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ Z
  • sigma_uni = {b#299 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ (S a'#347)
  • sigma_uni = {b#299 := (S a#346)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S Z))) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#249 := a#353, b#299 := (Add a#353 b#356), b'#357 := (S Z), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S Z) {a == a'}#355 {b == b'}#358)}
  • goal'     = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 (S Z))) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S Z) {a == a'}#355 {b == b'}#358))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S Z))) !~ (Norm (S a#359))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#356 b'#357) {b == b'}#358)
  • Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)
applying unifying substitution to environment
  • sigma_uni = {a#249 := a#353, b#299 := (Add a#353 b#356), b'#357 := (S Z), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S Z) {a == a'}#355 {b == b'}#358)}
--------------------------------
gas = 0
new subgoals
  • Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)
applying unifying substitution to environment
  • sigma_uni = {a'#252 := (Add a#239 b#242), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#239 b#242) {a == a'}#253)}
--------------------------------
gas = 6
activeGoals:
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal a#251 (Add a#239 b#242)) {a == a'}#253)
processing goal Valid (Tuple (Equal Z a'#202) {a == a'}#203)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#267 Z) Z) ({a + Z == Z} a#267))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#267 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#268 (S b#269)) (S (Add a#268 b#269))) ({a + S b == S (a + b)} a#268 b#269))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#268 (S b#269))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (S a#270) (S a'#271)) ({a == a' |- S a == S a'} a#270 a'#271 {a == a'}#272))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#270)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm a'#275) ({a == a', Norm a |- Norm a'} a#273 a'#275 {a == a'}#276))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm a'#275)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#277 b#280) (Add a#277 b'#281)) ({a == a', b == b' |- a + b == a + b'} a#277 a'#278 b#280 b'#281 {a == a'}#279 {b == b'}#282))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#277 b#280)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm (S a#283)) ({Norm (S a)} a#283 Norm a#285))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm (S a#283))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
--------------------------------
gas = 5
activeGoals:
  • Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal a#251 (Add a#239 b#242)) {a == a'}#253)
processing goal Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#286 Z) Z) ({a + Z == Z} a#286))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ Z
  • sigma_uni = {a#216 := (Add a#286 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#287 (S b#288)) (S (Add a#287 b#288))) ({a + S b == S (a + b)} a#287 b#288))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ (S (Add a#287 b#288))
  • sigma_uni = {a#216 := (Add a#287 (S b#288))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ Z
  • sigma_uni = {a#216 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (S a#289) (S a'#290)) ({a == a' |- S a == S a'} a#289 a'#290 {a == a'}#291))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ (S a'#290)
  • sigma_uni = {a#216 := (S a#289)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm a'#294) ({a == a', Norm a |- Norm a'} a#292 a'#294 {a == a'}#295))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm a'#294)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#296 b#299) (Add a#296 b'#300)) ({a == a', b == b' |- a + b == a + b'} a#296 a'#297 b#299 b'#300 {a == a'}#298 {b == b'}#301))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
  • goal'     = Valid (Tuple (Equal (Add Z b#299) (Add Z (S a#251))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm (S a#302)) ({Norm (S a)} a#302 Norm a#304))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm (S a#302))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#299 b'#300) {b == b'}#301)
  • Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)
applying unifying substitution to environment
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
--------------------------------
gas = 4
activeGoals:
  • Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal a#251 (Add a#239 b#242)) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
processing goal Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#305 Z) Z) ({a + Z == Z} a#305))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#305 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307))) ({a + S b == S (a + b)} a#306 b#307))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (S a#308) (S a'#309)) ({a == a' |- S a == S a'} a#308 a'#309 {a == a'}#310))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (S a#308) (S a'#309))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm a'#313) ({a == a', Norm a |- Norm a'} a#311 a'#313 {a == a'}#314))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
  • goal'     = Valid (Tuple (Norm (Add Z b#299)) ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#315 b#318) (Add a#315 b'#319)) ({a == a', b == b' |- a + b == a + b'} a#315 a'#316 b#318 b'#319 {a == a'}#317 {b == b'}#320))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#315 b#318) (Add a#315 b'#319))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm (S a#321)) ({Norm (S a)} a#321 Norm a#323))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ (S a#321)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#311 a'#313) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
applying unifying substitution to environment
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
--------------------------------
gas = 3
activeGoals:
  • Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal a#251 (Add a#239 b#242)) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal b#242 Z) {b == b'}#244)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
successfully unified goal with rule's conclusion
  • sigma_uni = {b#242 := (Add a#324 Z), {b == b'}#244 := ({a + Z == Z} a#324)}
  • goal'     = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#325 (S b#326)) (S (Add a#325 b#326))) ({a + S b == S (a + b)} a#325 b#326))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S (Add a#325 b#326))
  • sigma_uni = {b#242 := (Add a#325 (S b#326))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {b#242 := Z, {b == b'}#244 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (S a#327) (S a'#328)) ({a == a' |- S a == S a'} a#327 a'#328 {a == a'}#329))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a'#328)
  • sigma_uni = {b#242 := (S a#327)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm a'#332) ({a == a', Norm a |- Norm a'} a#330 a'#332 {a == a'}#333))
failed to unify goal with rule's conclusion
  • err       = (Equal b#242 Z) !~ (Norm a'#332)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 b'#338)) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 b'#338 {a == a'}#336 {b == b'}#339))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#334 b'#338)
  • sigma_uni = {b#242 := (Add a#334 b#337)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#242 Z) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#242 Z) {b == b'}#244)
  • rule.conc = Valid (Tuple (Norm (S a#340)) ({Norm (S a)} a#340 Norm a#342))
failed to unify goal with rule's conclusion
  • err       = (Equal b#242 Z) !~ (Norm (S a#340))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {b#242 := (Add a#324 Z), {b == b'}#244 := ({a + Z == Z} a#324)}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
delaying goal
  • goal = Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (Add a#324 Z)) !~ Z
  • sigma_uni = {a#251 := (Add a#343 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (Add a#324 Z)) !~ (S (Add a#344 b#345))
  • sigma_uni = {a#251 := (Add a#344 (S b#345))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (Add a#324 Z)) !~ Z
  • sigma_uni = {a#251 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 (Add a#324 Z)) !~ (S a'#347)
  • sigma_uni = {a#251 := (S a#346)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#239 (Add a#324 Z))) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#239 := a#353, a#251 := (Add a#353 b#356), b'#357 := (Add a#324 Z), {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358)}
  • goal'     = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 (Add a#324 Z))) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#239 (Add a#324 Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#239 (Add a#324 Z))) !~ (Norm (S a#359))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#356 b'#357) {b == b'}#358)
  • Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)
applying unifying substitution to environment
  • sigma_uni = {a#239 := a#353, a#251 := (Add a#353 b#356), b'#357 := (Add a#324 Z), {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358)}
--------------------------------
gas = 0
applying unifying substitution to environment
  • sigma_uni = {b#242 := Z, {b == b'}#244 := {Z == Z}}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
  • Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
delaying goal
  • goal = Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 Z) !~ Z
  • sigma_uni = {a#251 := (Add a#343 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 Z) !~ (S (Add a#344 b#345))
  • sigma_uni = {a#251 := (Add a#344 (S b#345))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#239 Z) !~ Z
  • sigma_uni = {a#251 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
failed to unify goal with rule's conclusion
  • err       = (Add a#239 Z) !~ (S a'#347)
  • sigma_uni = {a#251 := (S a#346)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#239 Z)) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#239 := a#353, a#251 := (Add a#353 b#356), b'#357 := Z, {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358)}
  • goal'     = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 Z)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#239 Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#239 Z)) !~ (Norm (S a#359))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#356 b'#357) {b == b'}#358)
  • Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)
applying unifying substitution to environment
  • sigma_uni = {a#239 := a#353, a#251 := (Add a#353 b#356), b'#357 := Z, {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358)}
--------------------------------
gas = 0
applying unifying substitution to environment
  • sigma_uni = {a#61 := Z, {a == a'}#63 := {Z == Z}}
--------------------------------
gas = 12
activeGoals:
  • Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • Valid (Tuple (Equal a#121 (Add Z b#109)) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
processing goal Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (Add a#153 Z) Z) ({a + Z == Z} a#153))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#109 := (Add a#153 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (Add a#154 (S b#155)) (S (Add a#154 b#155))) ({a + S b == S (a + b)} a#154 b#155))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#154 b#155)
  • sigma_uni = {b#109 := (Add a#154 (S b#155))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#109 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (S a#156) (S a'#157)) ({a == a' |- S a == S a'} a#156 a'#157 {a == a'}#158))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
  • goal'     = Valid (Tuple (Equal (S a#156) (S Z)) ({a == a' |- S a == S a'} a#156 Z {a == a'}#158))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Norm a'#161) ({a == a', Norm a |- Norm a'} a#159 a'#161 {a == a'}#162))
failed to unify goal with rule's conclusion
  • err       = (Equal b#109 (S Z)) !~ (Norm a'#161)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Equal (Add a#163 b#166) (Add a#163 b'#167)) ({a == a', b == b' |- a + b == a + b'} a#163 a'#164 b#166 b'#167 {a == a'}#165 {b == b'}#168))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ (Add a#163 b'#167)
  • sigma_uni = {b#109 := (Add a#163 b#166)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#109 (S Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111)
  • rule.conc = Valid (Tuple (Norm (S a#169)) ({Norm (S a)} a#169 Norm a#171))
failed to unify goal with rule's conclusion
  • err       = (Equal b#109 (S Z)) !~ (Norm (S a#169))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)
applying unifying substitution to environment
  • sigma_uni = {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
--------------------------------
gas = 11
activeGoals:
  • Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
  • Valid (Tuple (Equal a#156 Z) {a == a'}#158)
processing goal Valid (Tuple (Equal Z a'#107) {a == a'}#108)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#172 Z) Z) ({a + Z == Z} a#172))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#172 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#173 (S b#174)) (S (Add a#173 b#174))) ({a + S b == S (a + b)} a#173 b#174))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#173 (S b#174))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#107 := Z, {a == a'}#108 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (S a#175) (S a'#176)) ({a == a' |- S a == S a'} a#175 a'#176 {a == a'}#177))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#175)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm a'#180) ({a == a', Norm a |- Norm a'} a#178 a'#180 {a == a'}#181))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm a'#180)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Equal (Add a#182 b#185) (Add a#182 b'#186)) ({a == a', b == b' |- a + b == a + b'} a#182 a'#183 b#185 b'#186 {a == a'}#184 {b == b'}#187))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#182 b#185)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#107) {a == a'}#108)
  • rule.conc = Valid (Tuple (Norm (S a#188)) ({Norm (S a)} a#188 Norm a#190))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#107) !~ (Norm (S a#188))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#107 := Z, {a == a'}#108 := {Z == Z}}
--------------------------------
gas = 10
activeGoals:
  • Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • Valid (Tuple (Norm a#121) {Norm a}#122)
  • Valid (Tuple (Equal a#156 Z) {a == a'}#158)
processing goal Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#191 Z) Z) ({a + Z == Z} a#191))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ Z
  • sigma_uni = {a#121 := (Add a#191 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#192 (S b#193)) (S (Add a#192 b#193))) ({a + S b == S (a + b)} a#192 b#193))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ (S (Add a#192 b#193))
  • sigma_uni = {a#121 := (Add a#192 (S b#193))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ Z
  • sigma_uni = {a#121 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (S a#194) (S a'#195)) ({a == a' |- S a == S a'} a#194 a'#195 {a == a'}#196))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#156)) !~ (S a'#195)
  • sigma_uni = {a#121 := (S a#194)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm a'#199) ({a == a', Norm a |- Norm a'} a#197 a'#199 {a == a'}#200))
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (S a#156))) !~ (Norm a'#199)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Equal (Add a#201 b#204) (Add a#201 b'#205)) ({a == a', b == b' |- a + b == a + b'} a#201 a'#202 b#204 b'#205 {a == a'}#203 {b == b'}#206))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
  • goal'     = Valid (Tuple (Equal (Add Z b#204) (Add Z (S a#156))) ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (S a#156))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124)
  • rule.conc = Valid (Tuple (Norm (S a#207)) ({Norm (S a)} a#207 Norm a#209))
failed to unify goal with rule's conclusion
  • err       = (Equal a#121 (Add Z (S a#156))) !~ (Norm (S a#207))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#204 b'#205) {b == b'}#206)
  • Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)
applying unifying substitution to environment
  • sigma_uni = {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
--------------------------------
gas = 9
activeGoals:
  • Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • Valid (Tuple (Equal b#204 (S a#156)) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
processing goal Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#210 Z) Z) ({a + Z == Z} a#210))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#210 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#211 (S b#212)) (S (Add a#211 b#212))) ({a + S b == S (a + b)} a#211 b#212))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#211 (S b#212)) (S (Add a#211 b#212)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (S a#213) (S a'#214)) ({a == a' |- S a == S a'} a#213 a'#214 {a == a'}#215))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (S a#213) (S a'#214))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm a'#218) ({a == a', Norm a |- Norm a'} a#216 a'#218 {a == a'}#219))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
  • goal'     = Valid (Tuple (Norm (Add Z b#204)) ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Equal (Add a#220 b#223) (Add a#220 b'#224)) ({a == a', b == b' |- a + b == a + b'} a#220 a'#221 b#223 b'#224 {a == a'}#222 {b == b'}#225))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#204)) !~ (Equal (Add a#220 b#223) (Add a#220 b'#224))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#204) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122)
  • rule.conc = Valid (Tuple (Norm (S a#226)) ({Norm (S a)} a#226 Norm a#228))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#204) !~ (S a#226)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#216 a'#218) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
applying unifying substitution to environment
  • sigma_uni = {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
--------------------------------
gas = 8
activeGoals:
  • Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • Valid (Tuple (Equal b#204 (S a#156)) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z b#204)) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
processing goal Valid (Tuple (Equal a#156 Z) {a == a'}#158)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (Add a#229 Z) Z) ({a + Z == Z} a#229))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#156 := (Add a#229 Z), {a == a'}#158 := ({a + Z == Z} a#229)}
  • goal'     = Valid (Tuple (Equal (Add a#229 Z) Z) ({a + Z == Z} a#229))
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (Add a#230 (S b#231)) (S (Add a#230 b#231))) ({a + S b == S (a + b)} a#230 b#231))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S (Add a#230 b#231))
  • sigma_uni = {a#156 := (Add a#230 (S b#231))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a#156 := Z, {a == a'}#158 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (S a#232) (S a'#233)) ({a == a' |- S a == S a'} a#232 a'#233 {a == a'}#234))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a'#233)
  • sigma_uni = {a#156 := (S a#232)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Norm a'#237) ({a == a', Norm a |- Norm a'} a#235 a'#237 {a == a'}#238))
failed to unify goal with rule's conclusion
  • err       = (Equal a#156 Z) !~ (Norm a'#237)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Equal (Add a#239 b#242) (Add a#239 b'#243)) ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 b'#243 {a == a'}#241 {b == b'}#244))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#239 b'#243)
  • sigma_uni = {a#156 := (Add a#239 b#242)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#156 Z) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#156 Z) {a == a'}#158)
  • rule.conc = Valid (Tuple (Norm (S a#245)) ({Norm (S a)} a#245 Norm a#247))
failed to unify goal with rule's conclusion
  • err       = (Equal a#156 Z) !~ (Norm (S a#245))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#156 := (Add a#229 Z), {a == a'}#158 := ({a + Z == Z} a#229)}
--------------------------------
gas = 7
activeGoals:
  • Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z b#204)) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
processing goal Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#248 Z) Z) ({a + Z == Z} a#248))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#229 Z)) !~ Z
  • sigma_uni = {b#204 := (Add a#248 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#249 (S b#250)) (S (Add a#249 b#250))) ({a + S b == S (a + b)} a#249 b#250))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#229 := a#249, b#204 := (Add a#249 (S Z)), b#250 := Z, {b == b'}#206 := ({a + S b == S (a + b)} a#249 Z)}
  • goal'     = Valid (Tuple (Equal (Add a#249 (S Z)) (S (Add a#249 Z))) ({a + S b == S (a + b)} a#249 Z))
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S (Add a#229 Z)) !~ Z
  • sigma_uni = {b#204 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (S a#251) (S a'#252)) ({a == a' |- S a == S a'} a#251 a'#252 {a == a'}#253))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#252 := (Add a#229 Z), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#229 Z) {a == a'}#253)}
  • goal'     = Valid (Tuple (Equal (S a#251) (S (Add a#229 Z))) ({a == a' |- S a == S a'} a#251 (Add a#229 Z) {a == a'}#253))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm a'#256) ({a == a', Norm a |- Norm a'} a#254 a'#256 {a == a'}#257))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S (Add a#229 Z))) !~ (Norm a'#256)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#258 b#261) (Add a#258 b'#262)) ({a == a', b == b' |- a + b == a + b'} a#258 a'#259 b#261 b'#262 {a == a'}#260 {b == b'}#263))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#229 Z)) !~ (Add a#258 b'#262)
  • sigma_uni = {b#204 := (Add a#258 b#261)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S (Add a#229 Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm (S a#264)) ({Norm (S a)} a#264 Norm a#266))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S (Add a#229 Z))) !~ (Norm (S a#264))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#229 := a#249, b#204 := (Add a#249 (S Z)), b#250 := Z, {b == b'}#206 := ({a + S b == S (a + b)} a#249 Z)}
--------------------------------
gas = 6
activeGoals:
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
processing goal Valid (Tuple (Equal Z a'#202) {a == a'}#203)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#267 Z) Z) ({a + Z == Z} a#267))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#267 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#268 (S b#269)) (S (Add a#268 b#269))) ({a + S b == S (a + b)} a#268 b#269))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#268 (S b#269))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (S a#270) (S a'#271)) ({a == a' |- S a == S a'} a#270 a'#271 {a == a'}#272))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#270)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm a'#275) ({a == a', Norm a |- Norm a'} a#273 a'#275 {a == a'}#276))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm a'#275)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#277 b#280) (Add a#277 b'#281)) ({a == a', b == b' |- a + b == a + b'} a#277 a'#278 b#280 b'#281 {a == a'}#279 {b == b'}#282))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#277 b#280)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm (S a#283)) ({Norm (S a)} a#283 Norm a#285))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm (S a#283))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
--------------------------------
gas = 5
activeGoals:
  • Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
processing goal Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#286 Z) Z) ({a + Z == Z} a#286))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S Z))) !~ Z
  • sigma_uni = {a#216 := (Add a#286 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#287 (S b#288)) (S (Add a#287 b#288))) ({a + S b == S (a + b)} a#287 b#288))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S Z))) !~ (S (Add a#287 b#288))
  • sigma_uni = {a#216 := (Add a#287 (S b#288))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S Z))) !~ Z
  • sigma_uni = {a#216 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (S a#289) (S a'#290)) ({a == a' |- S a == S a'} a#289 a'#290 {a == a'}#291))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#249 (S Z))) !~ (S a'#290)
  • sigma_uni = {a#216 := (S a#289)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm a'#294) ({a == a', Norm a |- Norm a'} a#292 a'#294 {a == a'}#295))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#249 (S Z)))) !~ (Norm a'#294)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#296 b#299) (Add a#296 b'#300)) ({a == a', b == b' |- a + b == a + b'} a#296 a'#297 b#299 b'#300 {a == a'}#298 {b == b'}#301))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (Add a#249 (S Z)), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S Z)) {a == a'}#298 {b == b'}#301)}
  • goal'     = Valid (Tuple (Equal (Add Z b#299) (Add Z (Add a#249 (S Z)))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S Z)) {a == a'}#298 {b == b'}#301))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#249 (S Z)))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm (S a#302)) ({Norm (S a)} a#302 Norm a#304))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (Add a#249 (S Z)))) !~ (Norm (S a#302))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#299 b'#300) {b == b'}#301)
  • Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)
applying unifying substitution to environment
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (Add a#249 (S Z)), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S Z)) {a == a'}#298 {b == b'}#301)}
--------------------------------
gas = 4
activeGoals:
  • Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
processing goal Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#305 Z) Z) ({a + Z == Z} a#305))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#305 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307))) ({a + S b == S (a + b)} a#306 b#307))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (S a#308) (S a'#309)) ({a == a' |- S a == S a'} a#308 a'#309 {a == a'}#310))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (S a#308) (S a'#309))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm a'#313) ({a == a', Norm a |- Norm a'} a#311 a'#313 {a == a'}#314))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
  • goal'     = Valid (Tuple (Norm (Add Z b#299)) ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#315 b#318) (Add a#315 b'#319)) ({a == a', b == b' |- a + b == a + b'} a#315 a'#316 b#318 b'#319 {a == a'}#317 {b == b'}#320))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#315 b#318) (Add a#315 b'#319))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm (S a#321)) ({Norm (S a)} a#321 Norm a#323))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ (S a#321)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#311 a'#313) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
applying unifying substitution to environment
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
--------------------------------
gas = 3
activeGoals:
  • Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ Z
  • sigma_uni = {b#299 := (Add a#324 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#325 (S b#326)) (S (Add a#325 b#326))) ({a + S b == S (a + b)} a#325 b#326))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ (S (Add a#325 b#326))
  • sigma_uni = {b#299 := (Add a#325 (S b#326))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ Z
  • sigma_uni = {b#299 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (S a#327) (S a'#328)) ({a == a' |- S a == S a'} a#327 a'#328 {a == a'}#329))
failed to unify goal with rule's conclusion
  • err       = (Add a#249 (S Z)) !~ (S a'#328)
  • sigma_uni = {b#299 := (S a#327)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm a'#332) ({a == a', Norm a |- Norm a'} a#330 a'#332 {a == a'}#333))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S Z))) !~ (Norm a'#332)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 b'#338)) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 b'#338 {a == a'}#336 {b == b'}#339))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#249 := a#334, b#299 := (Add a#334 b#337), b'#338 := (S Z), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S Z) {a == a'}#336 {b == b'}#339)}
  • goal'     = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 (S Z))) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S Z) {a == a'}#336 {b == b'}#339))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm (S a#340)) ({Norm (S a)} a#340 Norm a#342))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (Add a#249 (S Z))) !~ (Norm (S a#340))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#337 b'#338) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
applying unifying substitution to environment
  • sigma_uni = {a#249 := a#334, b#299 := (Add a#334 b#337), b'#338 := (S Z), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S Z) {a == a'}#336 {b == b'}#339)}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
  • Valid (Tuple (Equal b#337 (S Z)) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
processing goal Valid (Tuple (Equal Z a'#297) {a == a'}#298)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#343 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#344 (S b#345))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#346)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#353 b#356)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm (S a#359))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
  • Valid (Tuple (Equal b#337 (S Z)) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
processing goal Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Equal (Add a#362 Z) Z) ({a + Z == Z} a#362))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#334 b#337)) !~ Z
  • sigma_uni = {a#311 := (Add a#362 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Equal (Add a#363 (S b#364)) (S (Add a#363 b#364))) ({a + S b == S (a + b)} a#363 b#364))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#334 b#337)) !~ (S (Add a#363 b#364))
  • sigma_uni = {a#311 := (Add a#363 (S b#364))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#334 b#337)) !~ Z
  • sigma_uni = {a#311 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Equal (S a#365) (S a'#366)) ({a == a' |- S a == S a'} a#365 a'#366 {a == a'}#367))
failed to unify goal with rule's conclusion
  • err       = (Add Z (Add a#334 b#337)) !~ (S a'#366)
  • sigma_uni = {a#311 := (S a#365)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Norm a'#370) ({a == a', Norm a |- Norm a'} a#368 a'#370 {a == a'}#371))
failed to unify goal with rule's conclusion
  • err       = (Equal a#311 (Add Z (Add a#334 b#337))) !~ (Norm a'#370)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Equal (Add a#372 b#375) (Add a#372 b'#376)) ({a == a', b == b' |- a + b == a + b'} a#372 a'#373 b#375 b'#376 {a == a'}#374 {b == b'}#377))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#311 := (Add Z b#375), a#372 := Z, b'#376 := (Add a#334 b#337), {a == a'}#314 := ({a == a', b == b' |- a + b == a + b'} Z a'#373 b#375 (Add a#334 b#337) {a == a'}#374 {b == b'}#377)}
  • goal'     = Valid (Tuple (Equal (Add Z b#375) (Add Z (Add a#334 b#337))) ({a == a', b == b' |- a + b == a + b'} Z a'#373 b#375 (Add a#334 b#337) {a == a'}#374 {b == b'}#377))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#311 (Add Z (Add a#334 b#337))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314)
  • rule.conc = Valid (Tuple (Norm (S a#378)) ({Norm (S a)} a#378 Norm a#380))
failed to unify goal with rule's conclusion
  • err       = (Equal a#311 (Add Z (Add a#334 b#337))) !~ (Norm (S a#378))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#375 b'#376) {b == b'}#377)
  • Valid (Tuple (Equal a#372 a'#373) {a == a'}#374)
applying unifying substitution to environment
  • sigma_uni = {a#311 := (Add Z b#375), a#372 := Z, b'#376 := (Add a#334 b#337), {a == a'}#314 := ({a == a', b == b' |- a + b == a + b'} Z a'#373 b#375 (Add a#334 b#337) {a == a'}#374 {b == b'}#377)}
--------------------------------
gas = 0
new subgoals
  • Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)
applying unifying substitution to environment
  • sigma_uni = {a'#252 := (Add a#229 Z), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#229 Z) {a == a'}#253)}
--------------------------------
gas = 6
activeGoals:
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
processing goal Valid (Tuple (Equal Z a'#202) {a == a'}#203)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#267 Z) Z) ({a + Z == Z} a#267))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#267 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#268 (S b#269)) (S (Add a#268 b#269))) ({a + S b == S (a + b)} a#268 b#269))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#268 (S b#269))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (S a#270) (S a'#271)) ({a == a' |- S a == S a'} a#270 a'#271 {a == a'}#272))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#270)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm a'#275) ({a == a', Norm a |- Norm a'} a#273 a'#275 {a == a'}#276))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm a'#275)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#277 b#280) (Add a#277 b'#281)) ({a == a', b == b' |- a + b == a + b'} a#277 a'#278 b#280 b'#281 {a == a'}#279 {b == b'}#282))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#277 b#280)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm (S a#283)) ({Norm (S a)} a#283 Norm a#285))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm (S a#283))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
--------------------------------
gas = 5
activeGoals:
  • Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
processing goal Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#286 Z) Z) ({a + Z == Z} a#286))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ Z
  • sigma_uni = {a#216 := (Add a#286 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#287 (S b#288)) (S (Add a#287 b#288))) ({a + S b == S (a + b)} a#287 b#288))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ (S (Add a#287 b#288))
  • sigma_uni = {a#216 := (Add a#287 (S b#288))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ Z
  • sigma_uni = {a#216 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (S a#289) (S a'#290)) ({a == a' |- S a == S a'} a#289 a'#290 {a == a'}#291))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ (S a'#290)
  • sigma_uni = {a#216 := (S a#289)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm a'#294) ({a == a', Norm a |- Norm a'} a#292 a'#294 {a == a'}#295))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm a'#294)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#296 b#299) (Add a#296 b'#300)) ({a == a', b == b' |- a + b == a + b'} a#296 a'#297 b#299 b'#300 {a == a'}#298 {b == b'}#301))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
  • goal'     = Valid (Tuple (Equal (Add Z b#299) (Add Z (S a#251))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm (S a#302)) ({Norm (S a)} a#302 Norm a#304))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm (S a#302))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#299 b'#300) {b == b'}#301)
  • Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)
applying unifying substitution to environment
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
--------------------------------
gas = 4
activeGoals:
  • Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
processing goal Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#305 Z) Z) ({a + Z == Z} a#305))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#305 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307))) ({a + S b == S (a + b)} a#306 b#307))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (S a#308) (S a'#309)) ({a == a' |- S a == S a'} a#308 a'#309 {a == a'}#310))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (S a#308) (S a'#309))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm a'#313) ({a == a', Norm a |- Norm a'} a#311 a'#313 {a == a'}#314))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
  • goal'     = Valid (Tuple (Norm (Add Z b#299)) ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#315 b#318) (Add a#315 b'#319)) ({a == a', b == b' |- a + b == a + b'} a#315 a'#316 b#318 b'#319 {a == a'}#317 {b == b'}#320))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#315 b#318) (Add a#315 b'#319))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm (S a#321)) ({Norm (S a)} a#321 Norm a#323))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ (S a#321)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#311 a'#313) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
applying unifying substitution to environment
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
--------------------------------
gas = 3
activeGoals:
  • Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
failed to unify goal with rule's conclusion
  • err       = (Add a#229 Z) !~ Z
  • sigma_uni = {a#251 := (Add a#324 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#325 (S b#326)) (S (Add a#325 b#326))) ({a + S b == S (a + b)} a#325 b#326))
failed to unify goal with rule's conclusion
  • err       = (Add a#229 Z) !~ (S (Add a#325 b#326))
  • sigma_uni = {a#251 := (Add a#325 (S b#326))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add a#229 Z) !~ Z
  • sigma_uni = {a#251 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (S a#327) (S a'#328)) ({a == a' |- S a == S a'} a#327 a'#328 {a == a'}#329))
failed to unify goal with rule's conclusion
  • err       = (Add a#229 Z) !~ (S a'#328)
  • sigma_uni = {a#251 := (S a#327)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm a'#332) ({a == a', Norm a |- Norm a'} a#330 a'#332 {a == a'}#333))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#229 Z)) !~ (Norm a'#332)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 b'#338)) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 b'#338 {a == a'}#336 {b == b'}#339))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#229 := a#334, a#251 := (Add a#334 b#337), b'#338 := Z, {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339)}
  • goal'     = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 Z)) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#229 Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm (S a#340)) ({Norm (S a)} a#340 Norm a#342))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 (Add a#229 Z)) !~ (Norm (S a#340))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#337 b'#338) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
applying unifying substitution to environment
  • sigma_uni = {a#229 := a#334, a#251 := (Add a#334 b#337), b'#338 := Z, {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339)}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
  • Valid (Tuple (Equal b#337 Z) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
processing goal Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#334 b#337)) !~ Z
  • sigma_uni = {b#299 := (Add a#343 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#334 := a#344, b#299 := (Add a#344 (S b#345)), b#337 := b#345, {b == b'}#301 := ({a + S b == S (a + b)} a#344 b#345)}
  • goal'     = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S (Add a#334 b#337)) !~ Z
  • sigma_uni = {b#299 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#347 := (Add a#334 b#337), b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#334 b#337) {a == a'}#348)}
  • goal'     = Valid (Tuple (Equal (S a#346) (S (Add a#334 b#337))) ({a == a' |- S a == S a'} a#346 (Add a#334 b#337) {a == a'}#348))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S (Add a#334 b#337))) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#334 b#337)) !~ (Add a#353 b'#357)
  • sigma_uni = {b#299 := (Add a#353 b#356)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S (Add a#334 b#337))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S (Add a#334 b#337))) !~ (Norm (S a#359))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#334 := a#344, b#299 := (Add a#344 (S b#345)), b#337 := b#345, {b == b'}#301 := ({a + S b == S (a + b)} a#344 b#345)}
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z (Add a#344 (S b#345)))) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
  • Valid (Tuple (Equal b#345 Z) {b == b'}#339)
  • Valid (Tuple (Equal a#344 a'#335) {a == a'}#336)
processing goal Valid (Tuple (Equal Z a'#297) {a == a'}#298)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#362 Z) Z) ({a + Z == Z} a#362))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#362 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#363 (S b#364)) (S (Add a#363 b#364))) ({a + S b == S (a + b)} a#363 b#364))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#363 (S b#364))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (S a#365) (S a'#366)) ({a == a' |- S a == S a'} a#365 a'#366 {a == a'}#367))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#365)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm a'#370) ({a == a', Norm a |- Norm a'} a#368 a'#370 {a == a'}#371))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm a'#370)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#372 b#375) (Add a#372 b'#376)) ({a == a', b == b' |- a + b == a + b'} a#372 a'#373 b#375 b'#376 {a == a'}#374 {b == b'}#377))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#372 b#375)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm (S a#378)) ({Norm (S a)} a#378 Norm a#380))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm (S a#378))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
--------------------------------
gas = 0
new subgoals
  • Valid (Tuple (Equal a#346 a'#347) {a == a'}#348)
applying unifying substitution to environment
  • sigma_uni = {a'#347 := (Add a#334 b#337), b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#334 b#337) {a == a'}#348)}
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z (S a#346))) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
  • Valid (Tuple (Equal b#337 Z) {b == b'}#339)
  • Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)
  • Valid (Tuple (Equal a#346 (Add a#334 b#337)) {a == a'}#348)
processing goal Valid (Tuple (Equal Z a'#297) {a == a'}#298)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#362 Z) Z) ({a + Z == Z} a#362))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#362 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#363 (S b#364)) (S (Add a#363 b#364))) ({a + S b == S (a + b)} a#363 b#364))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#363 (S b#364))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (S a#365) (S a'#366)) ({a == a' |- S a == S a'} a#365 a'#366 {a == a'}#367))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#365)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm a'#370) ({a == a', Norm a |- Norm a'} a#368 a'#370 {a == a'}#371))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm a'#370)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#372 b#375) (Add a#372 b'#376)) ({a == a', b == b' |- a + b == a + b'} a#372 a'#373 b#375 b'#376 {a == a'}#374 {b == b'}#377))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#372 b#375)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm (S a#378)) ({Norm (S a)} a#378 Norm a#380))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm (S a#378))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
--------------------------------
gas = 0
applying unifying substitution to environment
  • sigma_uni = {a#156 := Z, {a == a'}#158 := {Z == Z}}
--------------------------------
gas = 7
activeGoals:
  • Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z b#204)) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
processing goal Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#248 Z) Z) ({a + Z == Z} a#248))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#204 := (Add a#248 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#249 (S b#250)) (S (Add a#249 b#250))) ({a + S b == S (a + b)} a#249 b#250))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#249 b#250)
  • sigma_uni = {b#204 := (Add a#249 (S b#250))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#204 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (S a#251) (S a'#252)) ({a == a' |- S a == S a'} a#251 a'#252 {a == a'}#253))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#252 := Z, b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 Z {a == a'}#253)}
  • goal'     = Valid (Tuple (Equal (S a#251) (S Z)) ({a == a' |- S a == S a'} a#251 Z {a == a'}#253))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm a'#256) ({a == a', Norm a |- Norm a'} a#254 a'#256 {a == a'}#257))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S Z)) !~ (Norm a'#256)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Equal (Add a#258 b#261) (Add a#258 b'#262)) ({a == a', b == b' |- a + b == a + b'} a#258 a'#259 b#261 b'#262 {a == a'}#260 {b == b'}#263))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ (Add a#258 b'#262)
  • sigma_uni = {b#204 := (Add a#258 b#261)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206)
  • rule.conc = Valid (Tuple (Norm (S a#264)) ({Norm (S a)} a#264 Norm a#266))
failed to unify goal with rule's conclusion
  • err       = (Equal b#204 (S Z)) !~ (Norm (S a#264))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)
applying unifying substitution to environment
  • sigma_uni = {a'#252 := Z, b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 Z {a == a'}#253)}
--------------------------------
gas = 6
activeGoals:
  • Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal a#251 Z) {a == a'}#253)
processing goal Valid (Tuple (Equal Z a'#202) {a == a'}#203)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#267 Z) Z) ({a + Z == Z} a#267))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#267 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#268 (S b#269)) (S (Add a#268 b#269))) ({a + S b == S (a + b)} a#268 b#269))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#268 (S b#269))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (S a#270) (S a'#271)) ({a == a' |- S a == S a'} a#270 a'#271 {a == a'}#272))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#270)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm a'#275) ({a == a', Norm a |- Norm a'} a#273 a'#275 {a == a'}#276))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm a'#275)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Equal (Add a#277 b#280) (Add a#277 b'#281)) ({a == a', b == b' |- a + b == a + b'} a#277 a'#278 b#280 b'#281 {a == a'}#279 {b == b'}#282))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#277 b#280)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#202) {a == a'}#203)
  • rule.conc = Valid (Tuple (Norm (S a#283)) ({Norm (S a)} a#283 Norm a#285))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#202) !~ (Norm (S a#283))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#202 := Z, {a == a'}#203 := {Z == Z}}
--------------------------------
gas = 5
activeGoals:
  • Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • Valid (Tuple (Norm a#216) {Norm a}#217)
  • Valid (Tuple (Equal a#251 Z) {a == a'}#253)
processing goal Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#286 Z) Z) ({a + Z == Z} a#286))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ Z
  • sigma_uni = {a#216 := (Add a#286 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#287 (S b#288)) (S (Add a#287 b#288))) ({a + S b == S (a + b)} a#287 b#288))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ (S (Add a#287 b#288))
  • sigma_uni = {a#216 := (Add a#287 (S b#288))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ Z
  • sigma_uni = {a#216 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (S a#289) (S a'#290)) ({a == a' |- S a == S a'} a#289 a'#290 {a == a'}#291))
failed to unify goal with rule's conclusion
  • err       = (Add Z (S a#251)) !~ (S a'#290)
  • sigma_uni = {a#216 := (S a#289)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm a'#294) ({a == a', Norm a |- Norm a'} a#292 a'#294 {a == a'}#295))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm a'#294)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Equal (Add a#296 b#299) (Add a#296 b'#300)) ({a == a', b == b' |- a + b == a + b'} a#296 a'#297 b#299 b'#300 {a == a'}#298 {b == b'}#301))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
  • goal'     = Valid (Tuple (Equal (Add Z b#299) (Add Z (S a#251))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301))
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219)
  • rule.conc = Valid (Tuple (Norm (S a#302)) ({Norm (S a)} a#302 Norm a#304))
failed to unify goal with rule's conclusion
  • err       = (Equal a#216 (Add Z (S a#251))) !~ (Norm (S a#302))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal b#299 b'#300) {b == b'}#301)
  • Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)
applying unifying substitution to environment
  • sigma_uni = {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
--------------------------------
gas = 4
activeGoals:
  • Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
processing goal Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#305 Z) Z) ({a + Z == Z} a#305))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#305 Z) Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307))) ({a + S b == S (a + b)} a#306 b#307))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#306 (S b#307)) (S (Add a#306 b#307)))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal Z Z)
  • sigma_uni = {}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (S a#308) (S a'#309)) ({a == a' |- S a == S a'} a#308 a'#309 {a == a'}#310))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (S a#308) (S a'#309))
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm a'#313) ({a == a', Norm a |- Norm a'} a#311 a'#313 {a == a'}#314))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
  • goal'     = Valid (Tuple (Norm (Add Z b#299)) ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314))
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Equal (Add a#315 b#318) (Add a#315 b'#319)) ({a == a', b == b' |- a + b == a + b'} a#315 a'#316 b#318 b'#319 {a == a'}#317 {b == b'}#320))
failed to unify goal with rule's conclusion
  • err       = (Norm (Add Z b#299)) !~ (Equal (Add a#315 b#318) (Add a#315 b'#319))
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ Z
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217)
  • rule.conc = Valid (Tuple (Norm (S a#321)) ({Norm (S a)} a#321 Norm a#323))
failed to unify goal with rule's conclusion
  • err       = (Add Z b#299) !~ (S a#321)
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#311 a'#313) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
applying unifying substitution to environment
  • sigma_uni = {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
--------------------------------
gas = 3
activeGoals:
  • Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • Valid (Tuple (Equal b#299 (S a#251)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal a#251 Z) {a == a'}#253)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#251 := (Add a#324 Z), {a == a'}#253 := ({a + Z == Z} a#324)}
  • goal'     = Valid (Tuple (Equal (Add a#324 Z) Z) ({a + Z == Z} a#324))
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#325 (S b#326)) (S (Add a#325 b#326))) ({a + S b == S (a + b)} a#325 b#326))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S (Add a#325 b#326))
  • sigma_uni = {a#251 := (Add a#325 (S b#326))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a#251 := Z, {a == a'}#253 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (S a#327) (S a'#328)) ({a == a' |- S a == S a'} a#327 a'#328 {a == a'}#329))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a'#328)
  • sigma_uni = {a#251 := (S a#327)}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm a'#332) ({a == a', Norm a |- Norm a'} a#330 a'#332 {a == a'}#333))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 Z) !~ (Norm a'#332)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Equal (Add a#334 b#337) (Add a#334 b'#338)) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 b'#338 {a == a'}#336 {b == b'}#339))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#334 b'#338)
  • sigma_uni = {a#251 := (Add a#334 b#337)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 Z) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal a#251 Z) {a == a'}#253)
  • rule.conc = Valid (Tuple (Norm (S a#340)) ({Norm (S a)} a#340 Norm a#342))
failed to unify goal with rule's conclusion
  • err       = (Equal a#251 Z) !~ (Norm (S a#340))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#251 := (Add a#324 Z), {a == a'}#253 := ({a + Z == Z} a#324)}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#324 Z)) !~ Z
  • sigma_uni = {b#299 := (Add a#343 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
successfully unified goal with rule's conclusion
  • sigma_uni = {a#324 := a#344, b#299 := (Add a#344 (S Z)), b#345 := Z, {b == b'}#301 := ({a + S b == S (a + b)} a#344 Z)}
  • goal'     = Valid (Tuple (Equal (Add a#344 (S Z)) (S (Add a#344 Z))) ({a + S b == S (a + b)} a#344 Z))
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S (Add a#324 Z)) !~ Z
  • sigma_uni = {b#299 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#347 := (Add a#324 Z), b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#324 Z) {a == a'}#348)}
  • goal'     = Valid (Tuple (Equal (S a#346) (S (Add a#324 Z))) ({a == a' |- S a == S a'} a#346 (Add a#324 Z) {a == a'}#348))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S (Add a#324 Z))) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
failed to unify goal with rule's conclusion
  • err       = (S (Add a#324 Z)) !~ (Add a#353 b'#357)
  • sigma_uni = {b#299 := (Add a#353 b#356)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S (Add a#324 Z))) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S (Add a#324 Z))) !~ (Norm (S a#359))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a#324 := a#344, b#299 := (Add a#344 (S Z)), b#345 := Z, {b == b'}#301 := ({a + S b == S (a + b)} a#344 Z)}
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z (Add a#344 (S Z)))) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal Z a'#297) {a == a'}#298)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#362 Z) Z) ({a + Z == Z} a#362))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#362 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#363 (S b#364)) (S (Add a#363 b#364))) ({a + S b == S (a + b)} a#363 b#364))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#363 (S b#364))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (S a#365) (S a'#366)) ({a == a' |- S a == S a'} a#365 a'#366 {a == a'}#367))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#365)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm a'#370) ({a == a', Norm a |- Norm a'} a#368 a'#370 {a == a'}#371))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm a'#370)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#372 b#375) (Add a#372 b'#376)) ({a == a', b == b' |- a + b == a + b'} a#372 a'#373 b#375 b'#376 {a == a'}#374 {b == b'}#377))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#372 b#375)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm (S a#378)) ({Norm (S a)} a#378 Norm a#380))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm (S a#378))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
--------------------------------
gas = 0
new subgoals
  • Valid (Tuple (Equal a#346 a'#347) {a == a'}#348)
applying unifying substitution to environment
  • sigma_uni = {a'#347 := (Add a#324 Z), b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#324 Z) {a == a'}#348)}
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z (S a#346))) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
  • Valid (Tuple (Equal a#346 (Add a#324 Z)) {a == a'}#348)
processing goal Valid (Tuple (Equal Z a'#297) {a == a'}#298)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#362 Z) Z) ({a + Z == Z} a#362))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#362 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#363 (S b#364)) (S (Add a#363 b#364))) ({a + S b == S (a + b)} a#363 b#364))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#363 (S b#364))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (S a#365) (S a'#366)) ({a == a' |- S a == S a'} a#365 a'#366 {a == a'}#367))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#365)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm a'#370) ({a == a', Norm a |- Norm a'} a#368 a'#370 {a == a'}#371))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm a'#370)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#372 b#375) (Add a#372 b'#376)) ({a == a', b == b' |- a + b == a + b'} a#372 a'#373 b#375 b'#376 {a == a'}#374 {b == b'}#377))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#372 b#375)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm (S a#378)) ({Norm (S a)} a#378 Norm a#380))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm (S a#378))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
--------------------------------
gas = 0
applying unifying substitution to environment
  • sigma_uni = {a#251 := Z, {a == a'}#253 := {Z == Z}}
--------------------------------
gas = 2
activeGoals:
  • Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
processing goal Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#343 Z) Z) ({a + Z == Z} a#343))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#299 := (Add a#343 Z)}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#344 (S b#345)) (S (Add a#344 b#345))) ({a + S b == S (a + b)} a#344 b#345))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#344 b#345)
  • sigma_uni = {b#299 := (Add a#344 (S b#345))}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ Z
  • sigma_uni = {b#299 := Z}
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (S a#346) (S a'#347)) ({a == a' |- S a == S a'} a#346 a'#347 {a == a'}#348))
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#347 := Z, b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 Z {a == a'}#348)}
  • goal'     = Valid (Tuple (Equal (S a#346) (S Z)) ({a == a' |- S a == S a'} a#346 Z {a == a'}#348))
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm a'#351) ({a == a', Norm a |- Norm a'} a#349 a'#351 {a == a'}#352))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S Z)) !~ (Norm a'#351)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Equal (Add a#353 b#356) (Add a#353 b'#357)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 b'#357 {a == a'}#355 {b == b'}#358))
failed to unify goal with rule's conclusion
  • err       = (S Z) !~ (Add a#353 b'#357)
  • sigma_uni = {b#299 := (Add a#353 b#356)}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S Z)) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301)
  • rule.conc = Valid (Tuple (Norm (S a#359)) ({Norm (S a)} a#359 Norm a#361))
failed to unify goal with rule's conclusion
  • err       = (Equal b#299 (S Z)) !~ (Norm (S a#359))
  • sigma_uni = {}
new subgoals
  • Valid (Tuple (Equal a#346 a'#347) {a == a'}#348)
applying unifying substitution to environment
  • sigma_uni = {a'#347 := Z, b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 Z {a == a'}#348)}
--------------------------------
gas = 1
activeGoals:
  • Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • Valid (Tuple (Equal a#311 (Add Z (S a#346))) {a == a'}#314)
  • Valid (Tuple (Norm a#311) {Norm a}#312)
  • Valid (Tuple (Equal a#346 Z) {a == a'}#348)
processing goal Valid (Tuple (Equal Z a'#297) {a == a'}#298)
attempting to use rule {a + Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#362 Z) Z) ({a + Z == Z} a#362))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#362 Z)
  • sigma_uni = {}
attempting to use rule {a + S b == S (a + b)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#363 (S b#364)) (S (Add a#363 b#364))) ({a + S b == S (a + b)} a#363 b#364))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#363 (S b#364))
  • sigma_uni = {}
attempting to use rule {Z == Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal Z Z) {Z == Z})
successfully unified goal with rule's conclusion
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
  • goal'     = Valid (Tuple (Equal Z Z) {Z == Z})
attempting to use rule {a == a' |- S a == S a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (S a#365) (S a'#366)) ({a == a' |- S a == S a'} a#365 a'#366 {a == a'}#367))
failed to unify goal with rule's conclusion
  • err       = Z !~ (S a#365)
  • sigma_uni = {}
attempting to use rule {a == a', Norm a |- Norm a'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm a'#370) ({a == a', Norm a |- Norm a'} a#368 a'#370 {a == a'}#371))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm a'#370)
  • sigma_uni = {}
attempting to use rule {a == a', b == b' |- a + b == a + b'}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Equal (Add a#372 b#375) (Add a#372 b'#376)) ({a == a', b == b' |- a + b == a + b'} a#372 a'#373 b#375 b'#376 {a == a'}#374 {b == b'}#377))
failed to unify goal with rule's conclusion
  • err       = Z !~ (Add a#372 b#375)
  • sigma_uni = {}
attempting to use rule {Norm Z}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm Z) {Norm Z})
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm Z)
  • sigma_uni = {}
attempting to use rule {Norm (S a)}
attempting to unify goal with rule's conclusion
  • goal      = Valid (Tuple (Equal Z a'#297) {a == a'}#298)
  • rule.conc = Valid (Tuple (Norm (S a#378)) ({Norm (S a)} a#378 Norm a#380))
failed to unify goal with rule's conclusion
  • err       = (Equal Z a'#297) !~ (Norm (S a#378))
  • sigma_uni = {}
applying unifying substitution to environment
  • sigma_uni = {a'#297 := Z, {a == a'}#298 := {Z == Z}}
--------------------------------
gas = 0
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal Z a'#278) {a == a'}#279),
                         Valid (Tuple (Equal a#292 (Add Z (Add a#334 b#337))) {a == a'}#295),
                         Valid (Tuple (Norm a#292) {Norm a}#293),
                         Valid (Tuple (Equal a#308 Z) {a == a'}#310),
                         Valid (Tuple (Equal b#337 (S a#308)) {b == b'}#339),
                         Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)]
        • delayedGoals = [Valid (Tuple (Equal a#334 a'#240) {a == a'}#241)]
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {a + Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := (Add a#134 Z), {a == a'}#63 := ({a + Z == Z} a#134)}
            • {a + S b == S (a + b)}: Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111) <== [] with {a#134 := a#154, b#109 := (Add a#154 (S Z)), b#155 := Z, {b == b'}#111 := ({a + S b == S (a + b)} a#154 Z)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (Add a#154 (S Z)))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                              Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (Add a#154 (S Z)), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (Add a#154 (S Z)) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal b#204 (Add a#154 (S Z))) {b == b'}#206) <== [Valid (Tuple (Equal b#242 b'#243) {b == b'}#244),
                                                                                                                      Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)] with {a#154 := a#239, b#204 := (Add a#239 b#242), b'#243 := (S Z), {b == b'}#206 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 (S Z) {a == a'}#241 {b == b'}#244)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (Add a#239 b#242))) {a == a'}#219) <== [Valid (Tuple (Equal b#280 b'#281) {b == b'}#282),
                                                                                                                              Valid (Tuple (Equal a#277 a'#278) {a == a'}#279)] with {a#216 := (Add Z b#280), a#277 := Z, b'#281 := (Add a#239 b#242), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#278 b#280 (Add a#239 b#242) {a == a'}#279 {b == b'}#282)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#280)) {Norm a}#217) <== [Valid (Tuple (Equal a#292 a'#294) {a == a'}#295),
                                                                                                 Valid (Tuple (Norm a#292) {Norm a}#293)] with {a'#294 := (Add Z b#280), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#292 (Add Z b#280) {a == a'}#295)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#242 (S Z)) {b == b'}#244) <== [Valid (Tuple (Equal a#308 a'#309) {a == a'}#310)] with {a'#309 := Z, b#242 := (S a#308), {b == b'}#244 := ({a == a' |- S a == S a'} a#308 Z {a == a'}#310)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal b#280 (Add a#239 (S a#308))) {b == b'}#282) <== [Valid (Tuple (Equal b#337 b'#338) {b == b'}#339),
                                                                                                                          Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)] with {a#239 := a#334, b#280 := (Add a#334 b#337), b'#338 := (S a#308), {b == b'}#282 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S a#308) {a == a'}#336 {b == b'}#339)}
        • sigma = {a#7 := (Add Z (S (Add a#334 Z))), a#30 := Z, a#45 := (Add Z (Add a#334 (S Z))), a#61 := (Add a#334 Z), a#106 := Z, a#121 := (Add Z (Add a#334 (S a#308))), a#134 := a#334, a#154 := a#334, a#201 := Z, a#216 := (Add Z (Add a#334 b#337)), a#239 := a#334, a#277 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S (Add a#334 Z))), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (Add a#334 (S Z))), a'#202 := Z, a'#218 := (Add Z (Add a#334 (S a#308))), a'#294 := (Add Z (Add a#334 b#337)), a'#309 := Z, b#33 := (S (Add a#334 Z)), b#109 := (Add a#334 (S Z)), b#155 := Z, b#204 := (Add a#334 (S a#308)), b#242 := (S a#308), b#280 := (Add a#334 b#337), b'#34 := (S Z), b'#110 := (S (Add a#334 Z)), b'#205 := (Add a#334 (S Z)), b'#243 := (S Z), b'#281 := (Add a#334 (S a#308)), b'#338 := (S a#308), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#334 (S Z))) (Add Z (S (Add a#334 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 (S Z)) (S (Add a#334 Z)) {Z == Z} ({a + S b == S (a + b)} a#334 Z))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#334 (S a#308))) (Add Z (Add a#334 (S Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 (S a#308)) (Add a#334 (S Z)) {Z == Z} ({a == a', b == b' |- a + b == a + b'} a#334 a'#240 (S a#308) (S Z) {a == a'}#241 ({a == a' |- S a == S a'} a#308 Z {a == a'}#310)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#334 b#337)) (Add Z (Add a#334 (S a#308))) ({a == a', b == b' |- a + b == a + b'} Z a'#278 (Add a#334 b#337) (Add a#334 (S a#308)) {a == a'}#279 ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S a#308) {a == a'}#336 {b == b'}#339))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#292 (Add Z (Add a#334 b#337)) {a == a'}#295), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#334 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334)))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334))), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 (S Z)) (S (Add a#334 Z)) {Z == Z} ({a + S b == S (a + b)} a#334 Z)), {a == a'}#63 := ({a + Z == Z} a#334), {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 (S a#308)) (Add a#334 (S Z)) {Z == Z} ({a == a', b == b' |- a + b == a + b'} a#334 a'#240 (S a#308) (S Z) {a == a'}#241 ({a == a' |- S a == S a'} a#308 Z {a == a'}#310))), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#278 (Add a#334 b#337) (Add a#334 (S a#308)) {a == a'}#279 ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S a#308) {a == a'}#336 {b == b'}#339)), {b == b'}#35 := ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334)), {b == b'}#111 := ({a + S b == S (a + b)} a#334 Z), {b == b'}#206 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#240 (S a#308) (S Z) {a == a'}#241 ({a == a' |- S a == S a'} a#308 Z {a == a'}#310)), {b == b'}#244 := ({a == a' |- S a == S a'} a#308 Z {a == a'}#310), {b == b'}#282 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S a#308) {a == a'}#336 {b == b'}#339)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#353 a'#240) {a == a'}#241),
                         Valid (Tuple (Equal Z a'#297) {a == a'}#298),
                         Valid (Tuple (Equal a#311 (Add Z (Add a#353 b#356))) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal b#356 (S (Add a#324 Z))) {b == b'}#358),
                         Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {a + Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := (Add a#134 Z), {a == a'}#63 := ({a + Z == Z} a#134)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := (Add a#134 Z), b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 (Add a#134 Z) {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158) <== [Valid (Tuple (Equal b#242 b'#243) {b == b'}#244),
                                                                                                                  Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)] with {a#134 := a#239, a#156 := (Add a#239 b#242), b'#243 := Z, {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 Z {a == a'}#241 {b == b'}#244)}
            • {a + S b == S (a + b)}: Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206) <== [] with {a#239 := a#249, b#204 := (Add a#249 (S b#250)), b#242 := b#250, {b == b'}#206 := ({a + S b == S (a + b)} a#249 b#250)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                                  Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (Add a#249 (S b#250)), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S b#250)) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {a + Z == Z}: Valid (Tuple (Equal b#250 Z) {b == b'}#244) <== [] with {b#250 := (Add a#324 Z), {b == b'}#244 := ({a + Z == Z} a#324)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal b#299 (Add a#249 (S (Add a#324 Z)))) {b == b'}#301) <== [Valid (Tuple (Equal b#356 b'#357) {b == b'}#358),
                                                                                                                                  Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)] with {a#249 := a#353, b#299 := (Add a#353 b#356), b'#357 := (S (Add a#324 Z)), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S (Add a#324 Z)) {a == a'}#355 {b == b'}#358)}
        • sigma = {a#7 := (Add Z (S (Add a#353 Z))), a#30 := Z, a#45 := (Add Z (S (Add a#353 (Add a#324 Z)))), a#61 := (Add a#353 Z), a#106 := Z, a#121 := (Add Z (Add a#353 (S (Add a#324 Z)))), a#134 := a#353, a#156 := (Add a#353 (Add a#324 Z)), a#201 := Z, a#216 := (Add Z (Add a#353 b#356)), a#239 := a#353, a#249 := a#353, a#296 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S (Add a#353 Z))), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S (Add a#353 (Add a#324 Z)))), a'#157 := (Add a#353 Z), a'#202 := Z, a'#218 := (Add Z (Add a#353 (S (Add a#324 Z)))), a'#313 := (Add Z (Add a#353 b#356)), b#33 := (S (Add a#353 Z)), b#109 := (S (Add a#353 (Add a#324 Z))), b#204 := (Add a#353 (S (Add a#324 Z))), b#242 := (Add a#324 Z), b#250 := (Add a#324 Z), b#299 := (Add a#353 b#356), b'#34 := (S Z), b'#110 := (S (Add a#353 Z)), b'#205 := (S (Add a#353 (Add a#324 Z))), b'#243 := Z, b'#300 := (Add a#353 (S (Add a#324 Z))), b'#357 := (S (Add a#324 Z)), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 (Add a#324 Z)))) (Add Z (S (Add a#353 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 (Add a#324 Z))) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 (Add a#324 Z)) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324))))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#353 (S (Add a#324 Z)))) (Add Z (S (Add a#353 (Add a#324 Z)))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#353 (S (Add a#324 Z))) (S (Add a#353 (Add a#324 Z))) {Z == Z} ({a + S b == S (a + b)} a#353 (Add a#324 Z)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#353 b#356)) (Add Z (Add a#353 (S (Add a#324 Z)))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 (Add a#353 b#356) (Add a#353 (S (Add a#324 Z))) {a == a'}#298 ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S (Add a#324 Z)) {a == a'}#355 {b == b'}#358))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z (Add a#353 b#356)) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353))), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 (Add a#324 Z))) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 (Add a#324 Z)) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324)))), {a == a'}#63 := ({a + Z == Z} a#353), {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#353 (S (Add a#324 Z))) (S (Add a#353 (Add a#324 Z))) {Z == Z} ({a + S b == S (a + b)} a#353 (Add a#324 Z))), {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324)), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 (Add a#353 b#356) (Add a#353 (S (Add a#324 Z))) {a == a'}#298 ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S (Add a#324 Z)) {a == a'}#355 {b == b'}#358)), {b == b'}#35 := ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)), {b == b'}#111 := ({a == a' |- S a == S a'} (Add a#353 (Add a#324 Z)) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324))), {b == b'}#206 := ({a + S b == S (a + b)} a#353 (Add a#324 Z)), {b == b'}#244 := ({a + Z == Z} a#324), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S (Add a#324 Z)) {a == a'}#355 {b == b'}#358)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#353 a'#240) {a == a'}#241),
                         Valid (Tuple (Equal Z a'#297) {a == a'}#298),
                         Valid (Tuple (Equal a#311 (Add Z (Add a#353 b#356))) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal b#356 (S Z)) {b == b'}#358),
                         Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {a + Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := (Add a#134 Z), {a == a'}#63 := ({a + Z == Z} a#134)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := (Add a#134 Z), b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 (Add a#134 Z) {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158) <== [Valid (Tuple (Equal b#242 b'#243) {b == b'}#244),
                                                                                                                  Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)] with {a#134 := a#239, a#156 := (Add a#239 b#242), b'#243 := Z, {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 Z {a == a'}#241 {b == b'}#244)}
            • {a + S b == S (a + b)}: Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206) <== [] with {a#239 := a#249, b#204 := (Add a#249 (S b#250)), b#242 := b#250, {b == b'}#206 := ({a + S b == S (a + b)} a#249 b#250)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S b#250)))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                                  Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (Add a#249 (S b#250)), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S b#250)) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {Z == Z}: Valid (Tuple (Equal b#250 Z) {b == b'}#244) <== [] with {b#250 := Z, {b == b'}#244 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301) <== [Valid (Tuple (Equal b#356 b'#357) {b == b'}#358),
                                                                                                                      Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)] with {a#249 := a#353, b#299 := (Add a#353 b#356), b'#357 := (S Z), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S Z) {a == a'}#355 {b == b'}#358)}
        • sigma = {a#7 := (Add Z (S (Add a#353 Z))), a#30 := Z, a#45 := (Add Z (S (Add a#353 Z))), a#61 := (Add a#353 Z), a#106 := Z, a#121 := (Add Z (Add a#353 (S Z))), a#134 := a#353, a#156 := (Add a#353 Z), a#201 := Z, a#216 := (Add Z (Add a#353 b#356)), a#239 := a#353, a#249 := a#353, a#296 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S (Add a#353 Z))), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S (Add a#353 Z))), a'#157 := (Add a#353 Z), a'#202 := Z, a'#218 := (Add Z (Add a#353 (S Z))), a'#313 := (Add Z (Add a#353 b#356)), b#33 := (S (Add a#353 Z)), b#109 := (S (Add a#353 Z)), b#204 := (Add a#353 (S Z)), b#242 := Z, b#250 := Z, b#299 := (Add a#353 b#356), b'#34 := (S Z), b'#110 := (S (Add a#353 Z)), b'#205 := (S (Add a#353 Z)), b'#243 := Z, b'#300 := (Add a#353 (S Z)), b'#357 := (S Z), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 Z))) (Add Z (S (Add a#353 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z})))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#353 (S Z))) (Add Z (S (Add a#353 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#353 (S Z)) (S (Add a#353 Z)) {Z == Z} ({a + S b == S (a + b)} a#353 Z))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#353 b#356)) (Add Z (Add a#353 (S Z))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 (Add a#353 b#356) (Add a#353 (S Z)) {a == a'}#298 ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S Z) {a == a'}#355 {b == b'}#358))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z (Add a#353 b#356)) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353))), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z}))), {a == a'}#63 := ({a + Z == Z} a#353), {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#353 (S Z)) (S (Add a#353 Z)) {Z == Z} ({a + S b == S (a + b)} a#353 Z)), {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z}), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 (Add a#353 b#356) (Add a#353 (S Z)) {a == a'}#298 ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S Z) {a == a'}#355 {b == b'}#358)), {b == b'}#35 := ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)), {b == b'}#111 := ({a == a' |- S a == S a'} (Add a#353 Z) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z})), {b == b'}#206 := ({a + S b == S (a + b)} a#353 Z), {b == b'}#244 := {Z == Z}, {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (S Z) {a == a'}#355 {b == b'}#358)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#353 a'#240) {a == a'}#241),
                         Valid (Tuple (Equal b#299 (S (Add a#353 b#356))) {b == b'}#301),
                         Valid (Tuple (Equal Z a'#297) {a == a'}#298),
                         Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal b#356 (Add a#324 Z)) {b == b'}#358),
                         Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {a + Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := (Add a#134 Z), {a == a'}#63 := ({a + Z == Z} a#134)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := (Add a#134 Z), b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 (Add a#134 Z) {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158) <== [Valid (Tuple (Equal b#242 b'#243) {b == b'}#244),
                                                                                                                  Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)] with {a#134 := a#239, a#156 := (Add a#239 b#242), b'#243 := Z, {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 Z {a == a'}#241 {b == b'}#244)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206) <== [Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)] with {a'#252 := (Add a#239 b#242), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#239 b#242) {a == a'}#253)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                      Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {a + Z == Z}: Valid (Tuple (Equal b#242 Z) {b == b'}#244) <== [] with {b#242 := (Add a#324 Z), {b == b'}#244 := ({a + Z == Z} a#324)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#251 (Add a#239 (Add a#324 Z))) {a == a'}#253) <== [Valid (Tuple (Equal b#356 b'#357) {b == b'}#358),
                                                                                                                              Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)] with {a#239 := a#353, a#251 := (Add a#353 b#356), b'#357 := (Add a#324 Z), {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358)}
        • sigma = {a#7 := (Add Z (S (Add a#353 Z))), a#30 := Z, a#45 := (Add Z (S (Add a#353 (Add a#324 Z)))), a#61 := (Add a#353 Z), a#106 := Z, a#121 := (Add Z (S (Add a#353 b#356))), a#134 := a#353, a#156 := (Add a#353 (Add a#324 Z)), a#201 := Z, a#216 := (Add Z b#299), a#239 := a#353, a#251 := (Add a#353 b#356), a#296 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S (Add a#353 Z))), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S (Add a#353 (Add a#324 Z)))), a'#157 := (Add a#353 Z), a'#202 := Z, a'#218 := (Add Z (S (Add a#353 b#356))), a'#252 := (Add a#353 (Add a#324 Z)), a'#313 := (Add Z b#299), b#33 := (S (Add a#353 Z)), b#109 := (S (Add a#353 (Add a#324 Z))), b#204 := (S (Add a#353 b#356)), b#242 := (Add a#324 Z), b'#34 := (S Z), b'#110 := (S (Add a#353 Z)), b'#205 := (S (Add a#353 (Add a#324 Z))), b'#243 := Z, b'#300 := (S (Add a#353 b#356)), b'#357 := (Add a#324 Z), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 (Add a#324 Z)))) (Add Z (S (Add a#353 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 (Add a#324 Z))) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 (Add a#324 Z)) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324))))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 b#356))) (Add Z (S (Add a#353 (Add a#324 Z)))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 b#356)) (S (Add a#353 (Add a#324 Z))) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 b#356) (Add a#353 (Add a#324 Z)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z b#299) (Add Z (S (Add a#353 b#356))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S (Add a#353 b#356)) {a == a'}#298 {b == b'}#301)), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353))), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 (Add a#324 Z))) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 (Add a#324 Z)) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324)))), {a == a'}#63 := ({a + Z == Z} a#353), {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 b#356)) (S (Add a#353 (Add a#324 Z))) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 b#356) (Add a#353 (Add a#324 Z)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358))), {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324)), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S (Add a#353 b#356)) {a == a'}#298 {b == b'}#301), {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358), {b == b'}#35 := ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)), {b == b'}#111 := ({a == a' |- S a == S a'} (Add a#353 (Add a#324 Z)) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 (Add a#324 Z) Z {a == a'}#241 ({a + Z == Z} a#324))), {b == b'}#206 := ({a == a' |- S a == S a'} (Add a#353 b#356) (Add a#353 (Add a#324 Z)) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 (Add a#324 Z) {a == a'}#355 {b == b'}#358)), {b == b'}#244 := ({a + Z == Z} a#324)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#353 a'#240) {a == a'}#241),
                         Valid (Tuple (Equal b#299 (S (Add a#353 b#356))) {b == b'}#301),
                         Valid (Tuple (Equal Z a'#297) {a == a'}#298),
                         Valid (Tuple (Equal a#311 (Add Z b#299)) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal b#356 Z) {b == b'}#358),
                         Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {a + Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := (Add a#134 Z), {a == a'}#63 := ({a + Z == Z} a#134)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S (Add a#134 Z))) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := (Add a#134 Z), b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 (Add a#134 Z) {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#156 (Add a#134 Z)) {a == a'}#158) <== [Valid (Tuple (Equal b#242 b'#243) {b == b'}#244),
                                                                                                                  Valid (Tuple (Equal a#239 a'#240) {a == a'}#241)] with {a#134 := a#239, a#156 := (Add a#239 b#242), b'#243 := Z, {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#239 a'#240 b#242 Z {a == a'}#241 {b == b'}#244)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#204 (S (Add a#239 b#242))) {b == b'}#206) <== [Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)] with {a'#252 := (Add a#239 b#242), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#239 b#242) {a == a'}#253)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                      Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {Z == Z}: Valid (Tuple (Equal b#242 Z) {b == b'}#244) <== [] with {b#242 := Z, {b == b'}#244 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#251 (Add a#239 Z)) {a == a'}#253) <== [Valid (Tuple (Equal b#356 b'#357) {b == b'}#358),
                                                                                                                  Valid (Tuple (Equal a#353 a'#354) {a == a'}#355)] with {a#239 := a#353, a#251 := (Add a#353 b#356), b'#357 := Z, {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358)}
        • sigma = {a#7 := (Add Z (S (Add a#353 Z))), a#30 := Z, a#45 := (Add Z (S (Add a#353 Z))), a#61 := (Add a#353 Z), a#106 := Z, a#121 := (Add Z (S (Add a#353 b#356))), a#134 := a#353, a#156 := (Add a#353 Z), a#201 := Z, a#216 := (Add Z b#299), a#239 := a#353, a#251 := (Add a#353 b#356), a#296 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S (Add a#353 Z))), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S (Add a#353 Z))), a'#157 := (Add a#353 Z), a'#202 := Z, a'#218 := (Add Z (S (Add a#353 b#356))), a'#252 := (Add a#353 Z), a'#313 := (Add Z b#299), b#33 := (S (Add a#353 Z)), b#109 := (S (Add a#353 Z)), b#204 := (S (Add a#353 b#356)), b#242 := Z, b'#34 := (S Z), b'#110 := (S (Add a#353 Z)), b'#205 := (S (Add a#353 Z)), b'#243 := Z, b'#300 := (S (Add a#353 b#356)), b'#357 := Z, {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 Z))) (Add Z (S (Add a#353 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z})))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 b#356))) (Add Z (S (Add a#353 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 b#356)) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 b#356) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z b#299) (Add Z (S (Add a#353 b#356))) ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S (Add a#353 b#356)) {a == a'}#298 {b == b'}#301)), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#353 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353))), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 Z)) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 Z) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z}))), {a == a'}#63 := ({a + Z == Z} a#353), {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#353 b#356)) (S (Add a#353 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#353 b#356) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358))), {a == a'}#158 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z}), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S (Add a#353 b#356)) {a == a'}#298 {b == b'}#301), {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358), {b == b'}#35 := ({a == a' |- S a == S a'} (Add a#353 Z) Z ({a + Z == Z} a#353)), {b == b'}#111 := ({a == a' |- S a == S a'} (Add a#353 Z) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#240 Z Z {a == a'}#241 {Z == Z})), {b == b'}#206 := ({a == a' |- S a == S a'} (Add a#353 b#356) (Add a#353 Z) ({a == a', b == b' |- a + b == a + b'} a#353 a'#354 b#356 Z {a == a'}#355 {b == b'}#358)), {b == b'}#244 := {Z == Z}}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Norm (Add Z b#375)) {Norm a}#312),
                         Valid (Tuple (Equal b#337 (S Z)) {b == b'}#339),
                         Valid (Tuple (Equal a#334 a'#335) {a == a'}#336),
                         Valid (Tuple (Equal b#375 (Add a#334 b#337)) {b == b'}#377),
                         Valid (Tuple (Equal Z a'#373) {a == a'}#374)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := Z, {a == a'}#63 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a + Z == Z}: Valid (Tuple (Equal a#156 Z) {a == a'}#158) <== [] with {a#156 := (Add a#229 Z), {a == a'}#158 := ({a + Z == Z} a#229)}
            • {a + S b == S (a + b)}: Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206) <== [] with {a#229 := a#249, b#204 := (Add a#249 (S Z)), b#250 := Z, {b == b'}#206 := ({a + S b == S (a + b)} a#249 Z)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (Add a#249 (S Z)))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                              Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (Add a#249 (S Z)), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (Add a#249 (S Z)) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal b#299 (Add a#249 (S Z))) {b == b'}#301) <== [Valid (Tuple (Equal b#337 b'#338) {b == b'}#339),
                                                                                                                      Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)] with {a#249 := a#334, b#299 := (Add a#334 b#337), b'#338 := (S Z), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S Z) {a == a'}#336 {b == b'}#339)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#297) {a == a'}#298) <== [] with {a'#297 := Z, {a == a'}#298 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#311 (Add Z (Add a#334 b#337))) {a == a'}#314) <== [Valid (Tuple (Equal b#375 b'#376) {b == b'}#377),
                                                                                                                              Valid (Tuple (Equal a#372 a'#373) {a == a'}#374)] with {a#311 := (Add Z b#375), a#372 := Z, b'#376 := (Add a#334 b#337), {a == a'}#314 := ({a == a', b == b' |- a + b == a + b'} Z a'#373 b#375 (Add a#334 b#337) {a == a'}#374 {b == b'}#377)}
        • sigma = {a#7 := (Add Z (S Z)), a#30 := Z, a#45 := (Add Z (S (Add a#334 Z))), a#61 := Z, a#106 := Z, a#121 := (Add Z (Add a#334 (S Z))), a#156 := (Add a#334 Z), a#201 := Z, a#216 := (Add Z (Add a#334 b#337)), a#229 := a#334, a#249 := a#334, a#296 := Z, a#311 := (Add Z b#375), a#372 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S Z)), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S (Add a#334 Z))), a'#157 := Z, a'#202 := Z, a'#218 := (Add Z (Add a#334 (S Z))), a'#297 := Z, a'#313 := (Add Z (Add a#334 b#337)), b#33 := (S Z), b#109 := (S (Add a#334 Z)), b#204 := (Add a#334 (S Z)), b#250 := Z, b#299 := (Add a#334 b#337), b'#34 := (S Z), b'#110 := (S Z), b'#205 := (S (Add a#334 Z)), b'#300 := (Add a#334 (S Z)), b'#338 := (S Z), b'#376 := (Add a#334 b#337), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#334 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334)))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#334 (S Z))) (Add Z (S (Add a#334 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 (S Z)) (S (Add a#334 Z)) {Z == Z} ({a + S b == S (a + b)} a#334 Z))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#334 b#337)) (Add Z (Add a#334 (S Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 b#337) (Add a#334 (S Z)) {Z == Z} ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S Z) {a == a'}#336 {b == b'}#339))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} (Add Z b#375) (Add Z (Add a#334 b#337)) ({a == a', b == b' |- a + b == a + b'} Z a'#373 b#375 (Add a#334 b#337) {a == a'}#374 {b == b'}#377)), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334))), {a == a'}#63 := {Z == Z}, {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 (S Z)) (S (Add a#334 Z)) {Z == Z} ({a + S b == S (a + b)} a#334 Z)), {a == a'}#158 := ({a + Z == Z} a#334), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#334 b#337) (Add a#334 (S Z)) {Z == Z} ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S Z) {a == a'}#336 {b == b'}#339)), {a == a'}#298 := {Z == Z}, {a == a'}#314 := ({a == a', b == b' |- a + b == a + b'} Z a'#373 b#375 (Add a#334 b#337) {a == a'}#374 {b == b'}#377), {b == b'}#35 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#111 := ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334)), {b == b'}#206 := ({a + S b == S (a + b)} a#334 Z), {b == b'}#301 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 (S Z) {a == a'}#336 {b == b'}#339)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#311 (Add Z (Add a#344 (S b#345)))) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal b#345 Z) {b == b'}#339),
                         Valid (Tuple (Equal a#344 a'#335) {a == a'}#336)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := Z, {a == a'}#63 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a + Z == Z}: Valid (Tuple (Equal a#156 Z) {a == a'}#158) <== [] with {a#156 := (Add a#229 Z), {a == a'}#158 := ({a + Z == Z} a#229)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206) <== [Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)] with {a'#252 := (Add a#229 Z), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#229 Z) {a == a'}#253)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                      Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253) <== [Valid (Tuple (Equal b#337 b'#338) {b == b'}#339),
                                                                                                                  Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)] with {a#229 := a#334, a#251 := (Add a#334 b#337), b'#338 := Z, {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339)}
            • {a + S b == S (a + b)}: Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301) <== [] with {a#334 := a#344, b#299 := (Add a#344 (S b#345)), b#337 := b#345, {b == b'}#301 := ({a + S b == S (a + b)} a#344 b#345)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#297) {a == a'}#298) <== [] with {a'#297 := Z, {a == a'}#298 := {Z == Z}}
        • sigma = {a#7 := (Add Z (S Z)), a#30 := Z, a#45 := (Add Z (S (Add a#344 Z))), a#61 := Z, a#106 := Z, a#121 := (Add Z (S (Add a#344 b#345))), a#156 := (Add a#344 Z), a#201 := Z, a#216 := (Add Z (Add a#344 (S b#345))), a#229 := a#344, a#251 := (Add a#344 b#345), a#296 := Z, a#334 := a#344, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S Z)), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S (Add a#344 Z))), a'#157 := Z, a'#202 := Z, a'#218 := (Add Z (S (Add a#344 b#345))), a'#252 := (Add a#344 Z), a'#297 := Z, a'#313 := (Add Z (Add a#344 (S b#345))), b#33 := (S Z), b#109 := (S (Add a#344 Z)), b#204 := (S (Add a#344 b#345)), b#299 := (Add a#344 (S b#345)), b#337 := b#345, b'#34 := (S Z), b'#110 := (S Z), b'#205 := (S (Add a#344 Z)), b'#300 := (S (Add a#344 b#345)), b'#338 := Z, {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#344 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#344 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#344 Z) Z ({a + Z == Z} a#344)))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#344 b#345))) (Add Z (S (Add a#344 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#344 b#345)) (S (Add a#344 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#344 b#345) (Add a#344 Z) ({a == a', b == b' |- a + b == a + b'} a#344 a'#335 b#345 Z {a == a'}#336 {b == b'}#339)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#344 (S b#345))) (Add Z (S (Add a#344 b#345))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#344 (S b#345)) (S (Add a#344 b#345)) {Z == Z} ({a + S b == S (a + b)} a#344 b#345))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z (Add a#344 (S b#345))) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#344 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#344 Z) Z ({a + Z == Z} a#344))), {a == a'}#63 := {Z == Z}, {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#344 b#345)) (S (Add a#344 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#344 b#345) (Add a#344 Z) ({a == a', b == b' |- a + b == a + b'} a#344 a'#335 b#345 Z {a == a'}#336 {b == b'}#339))), {a == a'}#158 := ({a + Z == Z} a#344), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#344 (S b#345)) (S (Add a#344 b#345)) {Z == Z} ({a + S b == S (a + b)} a#344 b#345)), {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#344 a'#335 b#345 Z {a == a'}#336 {b == b'}#339), {a == a'}#298 := {Z == Z}, {b == b'}#35 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#111 := ({a == a' |- S a == S a'} (Add a#344 Z) Z ({a + Z == Z} a#344)), {b == b'}#206 := ({a == a' |- S a == S a'} (Add a#344 b#345) (Add a#344 Z) ({a == a', b == b' |- a + b == a + b'} a#344 a'#335 b#345 Z {a == a'}#336 {b == b'}#339)), {b == b'}#301 := ({a + S b == S (a + b)} a#344 b#345)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#311 (Add Z (S a#346))) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal b#337 Z) {b == b'}#339),
                         Valid (Tuple (Equal a#334 a'#335) {a == a'}#336),
                         Valid (Tuple (Equal a#346 (Add a#334 b#337)) {a == a'}#348)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := Z, {a == a'}#63 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {a + Z == Z}: Valid (Tuple (Equal a#156 Z) {a == a'}#158) <== [] with {a#156 := (Add a#229 Z), {a == a'}#158 := ({a + Z == Z} a#229)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#204 (S (Add a#229 Z))) {b == b'}#206) <== [Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)] with {a'#252 := (Add a#229 Z), b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 (Add a#229 Z) {a == a'}#253)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                      Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#251 (Add a#229 Z)) {a == a'}#253) <== [Valid (Tuple (Equal b#337 b'#338) {b == b'}#339),
                                                                                                                  Valid (Tuple (Equal a#334 a'#335) {a == a'}#336)] with {a#229 := a#334, a#251 := (Add a#334 b#337), b'#338 := Z, {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#299 (S (Add a#334 b#337))) {b == b'}#301) <== [Valid (Tuple (Equal a#346 a'#347) {a == a'}#348)] with {a'#347 := (Add a#334 b#337), b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#334 b#337) {a == a'}#348)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#297) {a == a'}#298) <== [] with {a'#297 := Z, {a == a'}#298 := {Z == Z}}
        • sigma = {a#7 := (Add Z (S Z)), a#30 := Z, a#45 := (Add Z (S (Add a#334 Z))), a#61 := Z, a#106 := Z, a#121 := (Add Z (S (Add a#334 b#337))), a#156 := (Add a#334 Z), a#201 := Z, a#216 := (Add Z (S a#346)), a#229 := a#334, a#251 := (Add a#334 b#337), a#296 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S Z)), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S (Add a#334 Z))), a'#157 := Z, a'#202 := Z, a'#218 := (Add Z (S (Add a#334 b#337))), a'#252 := (Add a#334 Z), a'#297 := Z, a'#313 := (Add Z (S a#346)), a'#347 := (Add a#334 b#337), b#33 := (S Z), b#109 := (S (Add a#334 Z)), b#204 := (S (Add a#334 b#337)), b#299 := (S a#346), b'#34 := (S Z), b'#110 := (S Z), b'#205 := (S (Add a#334 Z)), b'#300 := (S (Add a#334 b#337)), b'#338 := Z, {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#334 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334)))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#334 b#337))) (Add Z (S (Add a#334 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 b#337)) (S (Add a#334 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 b#337) (Add a#334 Z) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (S a#346)) (Add Z (S (Add a#334 b#337))) ({a == a', b == b' |- a + b == a + b'} Z Z (S a#346) (S (Add a#334 b#337)) {Z == Z} ({a == a' |- S a == S a'} a#346 (Add a#334 b#337) {a == a'}#348))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z (S a#346)) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334))), {a == a'}#63 := {Z == Z}, {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#334 b#337)) (S (Add a#334 Z)) {Z == Z} ({a == a' |- S a == S a'} (Add a#334 b#337) (Add a#334 Z) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339))), {a == a'}#158 := ({a + Z == Z} a#334), {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z Z (S a#346) (S (Add a#334 b#337)) {Z == Z} ({a == a' |- S a == S a'} a#346 (Add a#334 b#337) {a == a'}#348)), {a == a'}#253 := ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339), {a == a'}#298 := {Z == Z}, {b == b'}#35 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#111 := ({a == a' |- S a == S a'} (Add a#334 Z) Z ({a + Z == Z} a#334)), {b == b'}#206 := ({a == a' |- S a == S a'} (Add a#334 b#337) (Add a#334 Z) ({a == a', b == b' |- a + b == a + b'} a#334 a'#335 b#337 Z {a == a'}#336 {b == b'}#339)), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#334 b#337) {a == a'}#348)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#311 (Add Z (Add a#344 (S Z)))) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := Z, {a == a'}#63 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {Z == Z}: Valid (Tuple (Equal a#156 Z) {a == a'}#158) <== [] with {a#156 := Z, {a == a'}#158 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206) <== [Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)] with {a'#252 := Z, b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 Z {a == a'}#253)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                      Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {a + Z == Z}: Valid (Tuple (Equal a#251 Z) {a == a'}#253) <== [] with {a#251 := (Add a#324 Z), {a == a'}#253 := ({a + Z == Z} a#324)}
            • {a + S b == S (a + b)}: Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301) <== [] with {a#324 := a#344, b#299 := (Add a#344 (S Z)), b#345 := Z, {b == b'}#301 := ({a + S b == S (a + b)} a#344 Z)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#297) {a == a'}#298) <== [] with {a'#297 := Z, {a == a'}#298 := {Z == Z}}
        • sigma = {a#7 := (Add Z (S Z)), a#30 := Z, a#45 := (Add Z (S Z)), a#61 := Z, a#106 := Z, a#121 := (Add Z (S (Add a#344 Z))), a#156 := Z, a#201 := Z, a#216 := (Add Z (Add a#344 (S Z))), a#251 := (Add a#344 Z), a#296 := Z, a#324 := a#344, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S Z)), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S Z)), a'#157 := Z, a'#202 := Z, a'#218 := (Add Z (S (Add a#344 Z))), a'#252 := Z, a'#297 := Z, a'#313 := (Add Z (Add a#344 (S Z))), b#33 := (S Z), b#109 := (S Z), b#204 := (S (Add a#344 Z)), b#299 := (Add a#344 (S Z)), b#345 := Z, b'#34 := (S Z), b'#110 := (S Z), b'#205 := (S Z), b'#300 := (S (Add a#344 Z)), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#344 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#344 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#344 Z) Z ({a + Z == Z} a#344)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (Add a#344 (S Z))) (Add Z (S (Add a#344 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#344 (S Z)) (S (Add a#344 Z)) {Z == Z} ({a + S b == S (a + b)} a#344 Z))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z (Add a#344 (S Z))) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#63 := {Z == Z}, {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#344 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#344 Z) Z ({a + Z == Z} a#344))), {a == a'}#158 := {Z == Z}, {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z Z (Add a#344 (S Z)) (S (Add a#344 Z)) {Z == Z} ({a + S b == S (a + b)} a#344 Z)), {a == a'}#253 := ({a + Z == Z} a#344), {a == a'}#298 := {Z == Z}, {b == b'}#35 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#111 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#206 := ({a == a' |- S a == S a'} (Add a#344 Z) Z ({a + Z == Z} a#344)), {b == b'}#301 := ({a + S b == S (a + b)} a#344 Z)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#311 (Add Z (S a#346))) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal a#346 (Add a#324 Z)) {a == a'}#348)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := Z, {a == a'}#63 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {Z == Z}: Valid (Tuple (Equal a#156 Z) {a == a'}#158) <== [] with {a#156 := Z, {a == a'}#158 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206) <== [Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)] with {a'#252 := Z, b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 Z {a == a'}#253)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                      Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {a + Z == Z}: Valid (Tuple (Equal a#251 Z) {a == a'}#253) <== [] with {a#251 := (Add a#324 Z), {a == a'}#253 := ({a + Z == Z} a#324)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#299 (S (Add a#324 Z))) {b == b'}#301) <== [Valid (Tuple (Equal a#346 a'#347) {a == a'}#348)] with {a'#347 := (Add a#324 Z), b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#324 Z) {a == a'}#348)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#297) {a == a'}#298) <== [] with {a'#297 := Z, {a == a'}#298 := {Z == Z}}
        • sigma = {a#7 := (Add Z (S Z)), a#30 := Z, a#45 := (Add Z (S Z)), a#61 := Z, a#106 := Z, a#121 := (Add Z (S (Add a#324 Z))), a#156 := Z, a#201 := Z, a#216 := (Add Z (S a#346)), a#251 := (Add a#324 Z), a#296 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S Z)), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S Z)), a'#157 := Z, a'#202 := Z, a'#218 := (Add Z (S (Add a#324 Z))), a'#252 := Z, a'#297 := Z, a'#313 := (Add Z (S a#346)), a'#347 := (Add a#324 Z), b#33 := (S Z), b#109 := (S Z), b#204 := (S (Add a#324 Z)), b#299 := (S a#346), b'#34 := (S Z), b'#110 := (S Z), b'#205 := (S Z), b'#300 := (S (Add a#324 Z)), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (S (Add a#324 Z))) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#324 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#324 Z) Z ({a + Z == Z} a#324)))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (S a#346)) (Add Z (S (Add a#324 Z))) ({a == a', b == b' |- a + b == a + b'} Z Z (S a#346) (S (Add a#324 Z)) {Z == Z} ({a == a' |- S a == S a'} a#346 (Add a#324 Z) {a == a'}#348))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z (S a#346)) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#63 := {Z == Z}, {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (S (Add a#324 Z)) (S Z) {Z == Z} ({a == a' |- S a == S a'} (Add a#324 Z) Z ({a + Z == Z} a#324))), {a == a'}#158 := {Z == Z}, {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z Z (S a#346) (S (Add a#324 Z)) {Z == Z} ({a == a' |- S a == S a'} a#346 (Add a#324 Z) {a == a'}#348)), {a == a'}#253 := ({a + Z == Z} a#324), {a == a'}#298 := {Z == Z}, {b == b'}#35 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#111 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#206 := ({a == a' |- S a == S a'} (Add a#324 Z) Z ({a + Z == Z} a#324)), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 (Add a#324 Z) {a == a'}#348)}
branch terminated in error
  • err: Out of gas
  • env:
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Equal a#311 (Add Z (S a#346))) {a == a'}#314),
                         Valid (Tuple (Norm a#311) {Norm a}#312),
                         Valid (Tuple (Equal a#346 Z) {a == a'}#348)]
        • delayedGoals = []
        • failedGoals = []
        • steps:
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z (S Z))) {Norm input}) <== [Valid (Tuple (Equal a#7 a'#9) {a == a'}#10),
                                                                                                 Valid (Tuple (Norm a#7) {Norm a}#8)] with {a'#9 := (Add Z (S Z)), {Norm input} := ({a == a', Norm a |- Norm a'} a#7 (Add Z (S Z)) {a == a'}#10)}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#7 (Add Z (S Z))) {a == a'}#10) <== [Valid (Tuple (Equal b#33 b'#34) {b == b'}#35),
                                                                                                               Valid (Tuple (Equal a#30 a'#31) {a == a'}#32)] with {a#7 := (Add Z b#33), a#30 := Z, b'#34 := (S Z), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z a'#31 b#33 (S Z) {a == a'}#32 {b == b'}#35)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#33)) {Norm a}#8) <== [Valid (Tuple (Equal a#45 a'#47) {a == a'}#48),
                                                                                              Valid (Tuple (Norm a#45) {Norm a}#46)] with {a'#47 := (Add Z b#33), {Norm a}#8 := ({a == a', Norm a |- Norm a'} a#45 (Add Z b#33) {a == a'}#48)}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#33 (S Z)) {b == b'}#35) <== [Valid (Tuple (Equal a#61 a'#62) {a == a'}#63)] with {a'#62 := Z, b#33 := (S a#61), {b == b'}#35 := ({a == a' |- S a == S a'} a#61 Z {a == a'}#63)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#31) {a == a'}#32) <== [] with {a'#31 := Z, {a == a'}#32 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#45 (Add Z (S a#61))) {a == a'}#48) <== [Valid (Tuple (Equal b#109 b'#110) {b == b'}#111),
                                                                                                                   Valid (Tuple (Equal a#106 a'#107) {a == a'}#108)] with {a#45 := (Add Z b#109), a#106 := Z, b'#110 := (S a#61), {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z a'#107 b#109 (S a#61) {a == a'}#108 {b == b'}#111)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#109)) {Norm a}#46) <== [Valid (Tuple (Equal a#121 a'#123) {a == a'}#124),
                                                                                                Valid (Tuple (Norm a#121) {Norm a}#122)] with {a'#123 := (Add Z b#109), {Norm a}#46 := ({a == a', Norm a |- Norm a'} a#121 (Add Z b#109) {a == a'}#124)}
            • {Z == Z}: Valid (Tuple (Equal a#61 Z) {a == a'}#63) <== [] with {a#61 := Z, {a == a'}#63 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#109 (S Z)) {b == b'}#111) <== [Valid (Tuple (Equal a#156 a'#157) {a == a'}#158)] with {a'#157 := Z, b#109 := (S a#156), {b == b'}#111 := ({a == a' |- S a == S a'} a#156 Z {a == a'}#158)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#107) {a == a'}#108) <== [] with {a'#107 := Z, {a == a'}#108 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#121 (Add Z (S a#156))) {a == a'}#124) <== [Valid (Tuple (Equal b#204 b'#205) {b == b'}#206),
                                                                                                                      Valid (Tuple (Equal a#201 a'#202) {a == a'}#203)] with {a#121 := (Add Z b#204), a#201 := Z, b'#205 := (S a#156), {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z a'#202 b#204 (S a#156) {a == a'}#203 {b == b'}#206)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#204)) {Norm a}#122) <== [Valid (Tuple (Equal a#216 a'#218) {a == a'}#219),
                                                                                                 Valid (Tuple (Norm a#216) {Norm a}#217)] with {a'#218 := (Add Z b#204), {Norm a}#122 := ({a == a', Norm a |- Norm a'} a#216 (Add Z b#204) {a == a'}#219)}
            • {Z == Z}: Valid (Tuple (Equal a#156 Z) {a == a'}#158) <== [] with {a#156 := Z, {a == a'}#158 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#204 (S Z)) {b == b'}#206) <== [Valid (Tuple (Equal a#251 a'#252) {a == a'}#253)] with {a'#252 := Z, b#204 := (S a#251), {b == b'}#206 := ({a == a' |- S a == S a'} a#251 Z {a == a'}#253)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#202) {a == a'}#203) <== [] with {a'#202 := Z, {a == a'}#203 := {Z == Z}}
            • {a == a', b == b' |- a + b == a + b'}: Valid (Tuple (Equal a#216 (Add Z (S a#251))) {a == a'}#219) <== [Valid (Tuple (Equal b#299 b'#300) {b == b'}#301),
                                                                                                                      Valid (Tuple (Equal a#296 a'#297) {a == a'}#298)] with {a#216 := (Add Z b#299), a#296 := Z, b'#300 := (S a#251), {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z a'#297 b#299 (S a#251) {a == a'}#298 {b == b'}#301)}
            • {a == a', Norm a |- Norm a'}: Valid (Tuple (Norm (Add Z b#299)) {Norm a}#217) <== [Valid (Tuple (Equal a#311 a'#313) {a == a'}#314),
                                                                                                 Valid (Tuple (Norm a#311) {Norm a}#312)] with {a'#313 := (Add Z b#299), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z b#299) {a == a'}#314)}
            • {Z == Z}: Valid (Tuple (Equal a#251 Z) {a == a'}#253) <== [] with {a#251 := Z, {a == a'}#253 := {Z == Z}}
            • {a == a' |- S a == S a'}: Valid (Tuple (Equal b#299 (S Z)) {b == b'}#301) <== [Valid (Tuple (Equal a#346 a'#347) {a == a'}#348)] with {a'#347 := Z, b#299 := (S a#346), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 Z {a == a'}#348)}
            • {Z == Z}: Valid (Tuple (Equal Z a'#297) {a == a'}#298) <== [] with {a'#297 := Z, {a == a'}#298 := {Z == Z}}
        • sigma = {a#7 := (Add Z (S Z)), a#30 := Z, a#45 := (Add Z (S Z)), a#61 := Z, a#106 := Z, a#121 := (Add Z (S Z)), a#156 := Z, a#201 := Z, a#216 := (Add Z (S a#346)), a#251 := Z, a#296 := Z, a'#9 := (Add Z (S Z)), a'#31 := Z, a'#47 := (Add Z (S Z)), a'#62 := Z, a'#107 := Z, a'#123 := (Add Z (S Z)), a'#157 := Z, a'#202 := Z, a'#218 := (Add Z (S Z)), a'#252 := Z, a'#297 := Z, a'#313 := (Add Z (S a#346)), a'#347 := Z, b#33 := (S Z), b#109 := (S Z), b#204 := (S Z), b#299 := (S a#346), b'#34 := (S Z), b'#110 := (S Z), b'#205 := (S Z), b'#300 := (S Z), {Norm a}#8 := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {Norm a}#46 := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {Norm a}#122 := ({a == a', Norm a |- Norm a'} (Add Z (S a#346)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S a#346) (S Z) {Z == Z} ({a == a' |- S a == S a'} a#346 Z {a == a'}#348))), {Norm a}#217 := ({a == a', Norm a |- Norm a'} a#311 (Add Z (S a#346)) {a == a'}#314), {Norm input} := ({a == a', Norm a |- Norm a'} (Add Z (S Z)) (Add Z (S Z)) ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z}))), {a == a'}#10 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#32 := {Z == Z}, {a == a'}#48 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#63 := {Z == Z}, {a == a'}#108 := {Z == Z}, {a == a'}#124 := ({a == a', b == b' |- a + b == a + b'} Z Z (S Z) (S Z) {Z == Z} ({a == a' |- S a == S a'} Z Z {Z == Z})), {a == a'}#158 := {Z == Z}, {a == a'}#203 := {Z == Z}, {a == a'}#219 := ({a == a', b == b' |- a + b == a + b'} Z Z (S a#346) (S Z) {Z == Z} ({a == a' |- S a == S a'} a#346 Z {a == a'}#348)), {a == a'}#253 := {Z == Z}, {a == a'}#298 := {Z == Z}, {b == b'}#35 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#111 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#206 := ({a == a' |- S a == S a'} Z Z {Z == Z}), {b == b'}#301 := ({a == a' |- S a == S a'} a#346 Z {a == a'}#348)}

FAIL (0.07s)
        test/Spec/Engine/Common.hs:136:
        expected: error
        actual: failure

1 out of 1 tests failed (0.07s)
