tests
  Proof
    NormV1
      Z [success with substitutions {?output := Z}]:         OK
      (S Z) [success with substitutions {?output := (S Z)}]: OK
      (Add Z Z) [error]:                                     
Engine.run
--------------------------------
  • gas         = 3
  • activeGoals = 
  • status      = processing goal: Valid (Tuple (Norm (Add Z Z) ?output) ?{input ⇓ output})
successfully unified goal with rule's conclusion
  • rule      = {a + Z ⇓ ...}
  • sigma_uni = {?a₄ := Z, ?output := ?a'₅, ?{input ⇓ output} := ({a + Z ⇓ ...} Z ?a'₅ ?{a ⇓ a'}₆)}
  • goal      = Valid (Tuple (Norm (Add Z Z) ?output) ?{input ⇓ output})
  • goal'     = Valid (Tuple (Norm (Add Z Z) ?a'₅) ({a + Z ⇓ ...} Z ?a'₅ ?{a ⇓ a'}₆))
rule
  • rule {a + Z ⇓ ...}
      Valid (Tuple (Norm ?a₄ ?a'₅) ?{a ⇓ a'}₆)
      --------------------------------
      Valid (Tuple (Norm (Add ?a₄ Z) ?a'₅) ({a + Z ⇓ ...} ?a₄ ?a'₅ ?{a ⇓ a'}₆))
successfully unified goal with rule's conclusion
  • rule      = {a + S b ⇓ ...}
  • sigma_uni = {?a₇ := Z, ?b₁₀ := Z, ?output := (S ?c₁₃), ?{input ⇓ output} := ({a + S b ⇓ ...} Z ?a'₈ ?{a ⇓ a'}₉ Z ?b'₁₁ ?c₁₃ ?{b ⇓ S b'}₁₂)}
  • goal      = Valid (Tuple (Norm (Add Z Z) ?output) ?{input ⇓ output})
  • goal'     = Valid (Tuple (Norm (Add Z Z) (S ?c₁₃)) ({a + S b ⇓ ...} Z ?a'₈ ?{a ⇓ a'}₉ Z ?b'₁₁ ?c₁₃ ?{b ⇓ S b'}₁₂))
rule
  • rule {a + S b ⇓ ...}
      Valid (Tuple (Norm ?a₇ ?a'₈) ?{a ⇓ a'}₉)
      Valid (Tuple (Norm ?b₁₀ (S ?b'₁₁)) ?{b ⇓ S b'}₁₂)
      Valid (Tuple (Norm (Add ?a'₈ ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)
      --------------------------------
      Valid (Tuple (Norm (Add ?a₇ ?b₁₀) (S ?c₁₃)) ({a + S b ⇓ ...} ?a₇ ?a'₈ ?{a ⇓ a'}₉ ?b₁₀ ?b'₁₁ ?c₁₃ ?{b ⇓ S b'}₁₂))
new subgoals
  • Valid (Tuple (Norm Z ?a'₅) ?{a ⇓ a'}₆)
--------------------------------
  • gas         = 2
  • activeGoals = 
  • status      = processing goal: Valid (Tuple (Norm Z ?a'₅) ?{a ⇓ a'}₆)
successfully unified goal with rule's conclusion
  • rule      = {Z ⇓ ...}
  • sigma_uni = {?a'₅ := Z, ?{a ⇓ a'}₆ := {Z ⇓ ...}}
  • goal      = Valid (Tuple (Norm Z ?a'₅) ?{a ⇓ a'}₆)
  • goal'     = Valid (Tuple (Norm Z Z) {Z ⇓ ...})
rule
  • rule {Z ⇓ ...}
      --------------------------------
      Valid (Tuple (Norm Z Z) {Z ⇓ ...})
--------------------------------
  • gas         = 1
  • activeGoals = 
  • status      = no more active goals
new subgoals
  • Valid (Tuple (Norm Z ?a'₈) ?{a ⇓ a'}₉)
  • Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂)
  • Valid (Tuple (Norm (Add ?a'₈ ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)
--------------------------------
  • gas         = 2
  • activeGoals = 
      • Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂)
      • Valid (Tuple (Norm (Add ?a'₈ ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)
  • status      = processing goal: Valid (Tuple (Norm Z ?a'₈) ?{a ⇓ a'}₉)
successfully unified goal with rule's conclusion
  • rule      = {Z ⇓ ...}
  • sigma_uni = {?a'₈ := Z, ?{a ⇓ a'}₉ := {Z ⇓ ...}}
  • goal      = Valid (Tuple (Norm Z ?a'₈) ?{a ⇓ a'}₉)
  • goal'     = Valid (Tuple (Norm Z Z) {Z ⇓ ...})
rule
  • rule {Z ⇓ ...}
      --------------------------------
      Valid (Tuple (Norm Z Z) {Z ⇓ ...})
--------------------------------
  • gas         = 1
  • activeGoals = 
      • Valid (Tuple (Norm (Add Z ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)
  • status      = processing goal: Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂)
goal is unsolvable
  • goal = Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂)
--------------------------------
  • gas         = 0
  • activeGoals = 
  • status      = processing goal: Valid (Tuple (Norm (Add Z ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)
successfully unified goal with rule's conclusion
  • rule      = {a + Z ⇓ ...}
  • sigma_uni = {?a₄₆ := Z, ?b'₁₁ := Z, ?c₁₃ := ?a'₄₇, ?{a' + b' ⇓ c}₁₄ := ({a + Z ⇓ ...} Z ?a'₄₇ ?{a ⇓ a'}₄₈)}
  • goal      = Valid (Tuple (Norm (Add Z ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)
  • goal'     = Valid (Tuple (Norm (Add Z Z) ?a'₄₇) ({a + Z ⇓ ...} Z ?a'₄₇ ?{a ⇓ a'}₄₈))
rule
  • rule {a + Z ⇓ ...}
      Valid (Tuple (Norm ?a₄₆ ?a'₄₇) ?{a ⇓ a'}₄₈)
      --------------------------------
      Valid (Tuple (Norm (Add ?a₄₆ Z) ?a'₄₇) ({a + Z ⇓ ...} ?a₄₆ ?a'₄₇ ?{a ⇓ a'}₄₈))
successfully unified goal with rule's conclusion
  • rule      = {a + S b ⇓ ...}
  • sigma_uni = {?a₄₉ := Z, ?b'₁₁ := ?b₅₂, ?c₁₃ := (S ?c₅₅), ?{a' + b' ⇓ c}₁₄ := ({a + S b ⇓ ...} Z ?a'₅₀ ?{a ⇓ a'}₅₁ ?b₅₂ ?b'₅₃ ?c₅₅ ?{b ⇓ S b'}₅₄)}
  • goal      = Valid (Tuple (Norm (Add Z ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)
  • goal'     = Valid (Tuple (Norm (Add Z ?b₅₂) (S ?c₅₅)) ({a + S b ⇓ ...} Z ?a'₅₀ ?{a ⇓ a'}₅₁ ?b₅₂ ?b'₅₃ ?c₅₅ ?{b ⇓ S b'}₅₄))
rule
  • rule {a + S b ⇓ ...}
      Valid (Tuple (Norm ?a₄₉ ?a'₅₀) ?{a ⇓ a'}₅₁)
      Valid (Tuple (Norm ?b₅₂ (S ?b'₅₃)) ?{b ⇓ S b'}₅₄)
      Valid (Tuple (Norm (Add ?a'₅₀ ?b'₅₃) ?c₅₅) ?{a' + b' ⇓ c}₅₆)
      --------------------------------
      Valid (Tuple (Norm (Add ?a₄₉ ?b₅₂) (S ?c₅₅)) ({a + S b ⇓ ...} ?a₄₉ ?a'₅₀ ?{a ⇓ a'}₅₁ ?b₅₂ ?b'₅₃ ?c₅₅ ?{b ⇓ S b'}₅₄))
new subgoals
  • Valid (Tuple (Norm Z ?a'₄₇) ?{a ⇓ a'}₄₈)
new subgoals
  • Valid (Tuple (Norm Z ?a'₅₀) ?{a ⇓ a'}₅₁)
  • Valid (Tuple (Norm ?b₅₂ (S ?b'₅₃)) ?{b ⇓ S b'}₅₄)
  • Valid (Tuple (Norm (Add ?a'₅₀ ?b'₅₃) ?c₅₅) ?{a' + b' ⇓ c}₅₆)
branch terminated without error
branch terminated in error
  • err  : Out of gas
  • env' :
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Norm Z ?a'₄₇) ?{a ⇓ a'}₄₈)]
        • delayedGoals = []
        • failedGoals = [Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂)]
        • steps:
            • {a + S b ⇓ ...}: Valid (Tuple (Norm (Add Z Z) ?output) ?{input ⇓ output}) <== [Valid (Tuple (Norm Z ?a'₈) ?{a ⇓ a'}₉),
                                                                                             Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂),
                                                                                             Valid (Tuple (Norm (Add ?a'₈ ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)] with {?a₇ := Z, ?b₁₀ := Z, ?output := (S ?c₁₃), ?{input ⇓ output} := ({a + S b ⇓ ...} Z ?a'₈ ?{a ⇓ a'}₉ Z ?b'₁₁ ?c₁₃ ?{b ⇓ S b'}₁₂)}
            • {Z ⇓ ...}: Valid (Tuple (Norm Z ?a'₈) ?{a ⇓ a'}₉) <== [] with {?a'₈ := Z, ?{a ⇓ a'}₉ := {Z ⇓ ...}}
            • {a + Z ⇓ ...}: Valid (Tuple (Norm (Add Z ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄) <== [Valid (Tuple (Norm Z ?a'₄₇) ?{a ⇓ a'}₄₈)] with {?a₄₆ := Z, ?b'₁₁ := Z, ?c₁₃ := ?a'₄₇, ?{a' + b' ⇓ c}₁₄ := ({a + Z ⇓ ...} Z ?a'₄₇ ?{a ⇓ a'}₄₈)}
        • sigma = {?a₇ := Z, ?a₄₆ := Z, ?a'₈ := Z, ?b₁₀ := Z, ?b'₁₁ := Z, ?c₁₃ := ?a'₄₇, ?output := (S ?a'₄₇), ?{a ⇓ a'}₉ := {Z ⇓ ...}, ?{a' + b' ⇓ c}₁₄ := ({a + Z ⇓ ...} Z ?a'₄₇ ?{a ⇓ a'}₄₈), ?{input ⇓ output} := ({a + S b ⇓ ...} Z Z {Z ⇓ ...} Z Z ?a'₄₇ ?{b ⇓ S b'}₁₂)}
branch terminated in error
  • err  : Out of gas
  • env' :
      engine environment:
        • gas = 0
        • activeGoals = [Valid (Tuple (Norm Z ?a'₅₀) ?{a ⇓ a'}₅₁),
                         Valid (Tuple (Norm ?b₅₂ (S ?b'₅₃)) ?{b ⇓ S b'}₅₄),
                         Valid (Tuple (Norm (Add ?a'₅₀ ?b'₅₃) ?c₅₅) ?{a' + b' ⇓ c}₅₆)]
        • delayedGoals = []
        • failedGoals = [Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂)]
        • steps:
            • {a + S b ⇓ ...}: Valid (Tuple (Norm (Add Z Z) ?output) ?{input ⇓ output}) <== [Valid (Tuple (Norm Z ?a'₈) ?{a ⇓ a'}₉),
                                                                                             Valid (Tuple (Norm Z (S ?b'₁₁)) ?{b ⇓ S b'}₁₂),
                                                                                             Valid (Tuple (Norm (Add ?a'₈ ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄)] with {?a₇ := Z, ?b₁₀ := Z, ?output := (S ?c₁₃), ?{input ⇓ output} := ({a + S b ⇓ ...} Z ?a'₈ ?{a ⇓ a'}₉ Z ?b'₁₁ ?c₁₃ ?{b ⇓ S b'}₁₂)}
            • {Z ⇓ ...}: Valid (Tuple (Norm Z ?a'₈) ?{a ⇓ a'}₉) <== [] with {?a'₈ := Z, ?{a ⇓ a'}₉ := {Z ⇓ ...}}
            • {a + S b ⇓ ...}: Valid (Tuple (Norm (Add Z ?b'₁₁) ?c₁₃) ?{a' + b' ⇓ c}₁₄) <== [Valid (Tuple (Norm Z ?a'₅₀) ?{a ⇓ a'}₅₁),
                                                                                             Valid (Tuple (Norm ?b₅₂ (S ?b'₅₃)) ?{b ⇓ S b'}₅₄),
                                                                                             Valid (Tuple (Norm (Add ?a'₅₀ ?b'₅₃) ?c₅₅) ?{a' + b' ⇓ c}₅₆)] with {?a₄₉ := Z, ?b'₁₁ := ?b₅₂, ?c₁₃ := (S ?c₅₅), ?{a' + b' ⇓ c}₁₄ := ({a + S b ⇓ ...} Z ?a'₅₀ ?{a ⇓ a'}₅₁ ?b₅₂ ?b'₅₃ ?c₅₅ ?{b ⇓ S b'}₅₄)}
        • sigma = {?a₇ := Z, ?a₄₉ := Z, ?a'₈ := Z, ?b₁₀ := Z, ?b'₁₁ := ?b₅₂, ?c₁₃ := (S ?c₅₅), ?output := (S (S ?c₅₅)), ?{a ⇓ a'}₉ := {Z ⇓ ...}, ?{a' + b' ⇓ c}₁₄ := ({a + S b ⇓ ...} Z ?a'₅₀ ?{a ⇓ a'}₅₁ ?b₅₂ ?b'₅₃ ?c₅₅ ?{b ⇓ S b'}₅₄), ?{input ⇓ output} := ({a + S b ⇓ ...} Z Z {Z ⇓ ...} Z ?b₅₂ (S ?c₅₅) ?{b ⇓ S b'}₁₂)}

FAIL
        test/Spec/Engine/Common.hs:139:
        expected: error
        actual: success
        Use -p '/NormV1/&&/(Add Z Z) [error]/' to rerun this test only.

1 out of 3 tests failed (0.00s)
